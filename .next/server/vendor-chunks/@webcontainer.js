"use strict";
/*
 * ATTENTION: An "eval-source-map" devtool has been used.
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file with attached SourceMaps in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
exports.id = "vendor-chunks/@webcontainer";
exports.ids = ["vendor-chunks/@webcontainer"];
exports.modules = {

/***/ "(ssr)/./node_modules/@webcontainer/api/dist/index.js":
/*!******************************************************!*\
  !*** ./node_modules/@webcontainer/api/dist/index.js ***!
  \******************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   PreviewMessageType: () => (/* reexport safe */ _preview_message_types_js__WEBPACK_IMPORTED_MODULE_1__.PreviewMessageType),\n/* harmony export */   WebContainer: () => (/* binding */ WebContainer),\n/* harmony export */   auth: () => (/* binding */ auth),\n/* harmony export */   configureAPIKey: () => (/* binding */ configureAPIKey),\n/* harmony export */   isPreviewMessage: () => (/* reexport safe */ _utils_js__WEBPACK_IMPORTED_MODULE_5__.isPreviewMessage),\n/* harmony export */   reloadPreview: () => (/* reexport safe */ _utils_js__WEBPACK_IMPORTED_MODULE_5__.reloadPreview)\n/* harmony export */ });\n/* harmony import */ var _internal_auth_state_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./internal/auth-state.js */ \"(ssr)/./node_modules/@webcontainer/api/dist/internal/auth-state.js\");\n/* harmony import */ var _preview_message_types_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./preview-message-types.js */ \"(ssr)/./node_modules/@webcontainer/api/dist/preview-message-types.js\");\n/* harmony import */ var _vendor_index_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./vendor/index.js */ \"(ssr)/./node_modules/@webcontainer/api/dist/vendor/index.js\");\n/* harmony import */ var _internal_tokens_js__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./internal/tokens.js */ \"(ssr)/./node_modules/@webcontainer/api/dist/internal/tokens.js\");\n/* harmony import */ var _internal_iframe_url_js__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ./internal/iframe-url.js */ \"(ssr)/./node_modules/@webcontainer/api/dist/internal/iframe-url.js\");\n/* harmony import */ var _utils_js__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ./utils.js */ \"(ssr)/./node_modules/@webcontainer/api/dist/utils.js\");\n/* harmony import */ var _utils_file_system_js__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! ./utils/file-system.js */ \"(ssr)/./node_modules/@webcontainer/api/dist/utils/file-system.js\");\n/**\n * The WebContainer Public API allows you build custom applications on top of an in-browser Node.js runtime.\n *\n * Its main entrypoint is the {@link WebContainer} class.\n *\n * @packageDocumentation\n */ \n\n\n\n\n\n\n\nconst auth = _internal_auth_state_js__WEBPACK_IMPORTED_MODULE_0__.auth;\n\n\nlet bootPromise = null;\nlet cachedServerPromise = null;\nlet cachedBootOptions = {};\nconst decoder = new TextDecoder();\nconst encoder = new TextEncoder();\n/**\n * The main export of this library. An instance of `WebContainer` represents a runtime\n * ready to be used.\n */ class WebContainer {\n    static{\n        /** @internal */ this._instance = null;\n    }\n    static{\n        /** @internal */ this._teardownPromise = null;\n    }\n    /** @internal */ constructor(/** @internal */ _instance, fs, previewScript, /** @internal */ _runtimeInfo){\n        this._tornDown = false;\n        this._unsubscribeFromTokenChangedListener = ()=>{};\n        this._instance = _instance;\n        this._runtimeInfo = _runtimeInfo;\n        this.fs = new FileSystemAPIClient(fs);\n        // forward the credentials to webcontainer if needed\n        if (_internal_auth_state_js__WEBPACK_IMPORTED_MODULE_0__.authState.initialized) {\n            this._unsubscribeFromTokenChangedListener = (0,_internal_tokens_js__WEBPACK_IMPORTED_MODULE_3__.addAccessTokenChangedListener)((accessToken)=>{\n                this._instance.setCredentials({\n                    accessToken,\n                    editorOrigin: _internal_auth_state_js__WEBPACK_IMPORTED_MODULE_0__.authState.editorOrigin\n                });\n            });\n            (async ()=>{\n                await _internal_auth_state_js__WEBPACK_IMPORTED_MODULE_0__.authState.authComplete.promise;\n                if (this._tornDown) {\n                    return;\n                }\n                (0,_internal_auth_state_js__WEBPACK_IMPORTED_MODULE_0__.assertAuthTokens)(_internal_auth_state_js__WEBPACK_IMPORTED_MODULE_0__.authState.tokens);\n                await this._instance.setCredentials({\n                    accessToken: _internal_auth_state_js__WEBPACK_IMPORTED_MODULE_0__.authState.tokens.access,\n                    editorOrigin: _internal_auth_state_js__WEBPACK_IMPORTED_MODULE_0__.authState.editorOrigin\n                });\n            })().catch((error)=>{\n                // print the error as this is likely a bug in webcontainer\n                console.error(error);\n            });\n        }\n    }\n    async spawn(command, optionsOrArgs, options) {\n        let args = [];\n        if (Array.isArray(optionsOrArgs)) {\n            args = optionsOrArgs;\n        } else {\n            options = optionsOrArgs;\n        }\n        let output = undefined;\n        let outputStream = new ReadableStream();\n        if (options?.output !== false) {\n            const result = streamWithPush();\n            output = result.push;\n            outputStream = result.stream;\n        }\n        let stdout = undefined;\n        let stdoutStream;\n        let stderr = undefined;\n        let stderrStream;\n        const wrappedOutput = proxyListener(binaryListener(output));\n        const wrappedStdout = proxyListener(binaryListener(stdout));\n        const wrappedStderr = proxyListener(binaryListener(stderr));\n        const process = await this._instance.run({\n            command,\n            args,\n            cwd: options?.cwd,\n            env: options?.env,\n            terminal: options?.terminal\n        }, wrappedStdout, wrappedStderr, wrappedOutput);\n        return new WebContainerProcessImpl(process, outputStream, stdoutStream, stderrStream);\n    }\n    async export(path, options) {\n        const serializeOptions = {\n            format: options?.format ?? \"json\",\n            includes: options?.includes,\n            excludes: options?.excludes,\n            external: true\n        };\n        const result = await this._instance.serialize(path, serializeOptions);\n        if (serializeOptions.format === \"json\") {\n            const data = JSON.parse(decoder.decode(result));\n            return (0,_utils_file_system_js__WEBPACK_IMPORTED_MODULE_6__.toExternalFileSystemTree)(data);\n        }\n        return result;\n    }\n    on(event, listener) {\n        if (event === \"preview-message\") {\n            const originalListener = listener;\n            listener = (message)=>{\n                if ((0,_utils_js__WEBPACK_IMPORTED_MODULE_5__.isPreviewMessage)(message)) {\n                    originalListener(message);\n                }\n            };\n        }\n        const { listener: wrapped, subscribe } = syncSubscription(listener);\n        return subscribe(this._instance.on(event, _vendor_index_js__WEBPACK_IMPORTED_MODULE_2__.Comlink.proxy(wrapped)));\n    }\n    /**\n     * Mounts a tree of files into the filesystem. This can be specified as a tree object ({@link FileSystemTree})\n     * or as a binary snapshot generated by [`@webcontainer/snapshot`](https://www.npmjs.com/package/@webcontainer/snapshot).\n     *\n     * @param snapshotOrTree - A tree of files, or a binary snapshot. Note that binary payloads will be transferred.\n     * @param options.mountPoint - Specifies a nested path where the tree should be mounted.\n     */ mount(snapshotOrTree, options) {\n        const payload = snapshotOrTree instanceof Uint8Array ? snapshotOrTree : snapshotOrTree instanceof ArrayBuffer ? new Uint8Array(snapshotOrTree) : encoder.encode(JSON.stringify((0,_utils_file_system_js__WEBPACK_IMPORTED_MODULE_6__.toInternalFileSystemTree)(snapshotOrTree)));\n        return this._instance.loadFiles(_vendor_index_js__WEBPACK_IMPORTED_MODULE_2__.Comlink.transfer(payload, [\n            payload.buffer\n        ]), {\n            mountPoints: options?.mountPoint\n        });\n    }\n    /**\n     * Set a custom script to be injected into all previews. When this function is called, every\n     * future page reload will contain the provided script tag on all HTML responses.\n     *\n     * Note:\n     *\n     * When this function resolves, every preview reloaded _after_ will have the new script.\n     * Existing preview have to be explicitely reloaded.\n     *\n     * To reload a preview you can use `reloadPreview`.\n     *\n     * @param scriptSrc Source for the script tag.\n     * @param options Options to define which type of script this is.\n     */ setPreviewScript(scriptSrc, options) {\n        return this._instance.setPreviewScript(scriptSrc, options);\n    }\n    /**\n     * The default value of the `PATH` environment variable for processes started through {@link spawn}.\n     */ get path() {\n        return this._runtimeInfo.path;\n    }\n    /**\n     * The full path to the working directory (see {@link FileSystemAPI}).\n     */ get workdir() {\n        return this._runtimeInfo.cwd;\n    }\n    /**\n     * Destroys the WebContainer instance, turning it unusable, and releases its resources. After this,\n     * a new WebContainer instance can be obtained by calling {@link WebContainer.boot | `boot`}.\n     *\n     * All entities derived from this instance (e.g. processes, the file system, etc.) also become unusable\n     * after calling this method.\n     */ teardown() {\n        if (this._tornDown) {\n            throw new Error(\"WebContainer already torn down\");\n        }\n        this._tornDown = true;\n        this._unsubscribeFromTokenChangedListener();\n        const teardownFn = async ()=>{\n            try {\n                await this.fs._teardown();\n                await this._instance.teardown();\n            } finally{\n                this._instance[_vendor_index_js__WEBPACK_IMPORTED_MODULE_2__.Comlink.releaseProxy]();\n                if (WebContainer._instance === this) {\n                    WebContainer._instance = null;\n                }\n            }\n        };\n        WebContainer._teardownPromise = teardownFn();\n    }\n    /**\n     * Boots a WebContainer. Only a single instance of WebContainer can be booted concurrently\n     * (see {@link WebContainer.teardown | `teardown`}).\n     *\n     * Booting WebContainer is an expensive operation.\n     */ static async boot(options = {}) {\n        await this._teardownPromise;\n        WebContainer._teardownPromise = null;\n        const { workdirName } = options;\n        if (window.crossOriginIsolated && options.coep === \"none\") {\n            console.warn(`A Cross-Origin-Embedder-Policy header is required in cross origin isolated environments.\\nSet the 'coep' option to 'require-corp'.`);\n        }\n        if (workdirName?.includes(\"/\") || workdirName === \"..\" || workdirName === \".\") {\n            throw new Error(\"workdirName should be a valid folder name\");\n        }\n        // signal that boot was called to auth module as calling auth.init after boot is likely incorrect\n        _internal_auth_state_js__WEBPACK_IMPORTED_MODULE_0__.authState.bootCalled = true;\n        // try to \"acquire the lock\", i.e. wait for any ongoing boot request to finish\n        while(bootPromise){\n            await bootPromise;\n        }\n        if (WebContainer._instance) {\n            throw new Error(\"Only a single WebContainer instance can be booted\");\n        }\n        const instancePromise = unsynchronizedBoot(options);\n        // the \"lock\" is a promise for the ongoing boot that never fails\n        bootPromise = instancePromise.catch(()=>{});\n        try {\n            const instance = await instancePromise;\n            WebContainer._instance = instance;\n            return instance;\n        } finally{\n            // release the \"lock\"\n            bootPromise = null;\n        }\n    }\n}\n/**\n * Configure an API key to be used for this instance of WebContainer.\n *\n * @param key WebContainer API key.\n */ function configureAPIKey(key) {\n    if (_internal_auth_state_js__WEBPACK_IMPORTED_MODULE_0__.authState.bootCalled) {\n        throw new Error(\"`configureAPIKey` should always be called before `WebContainer.boot`\");\n    }\n    _internal_iframe_url_js__WEBPACK_IMPORTED_MODULE_4__.iframeSettings.setQueryParam(\"client_id\", key);\n}\nconst DIR_ENTRY_TYPE_FILE = 1;\nconst DIR_ENTRY_TYPE_DIR = 2;\n/**\n * @internal\n */ class DirEntImpl {\n    constructor(name, _type){\n        this.name = name;\n        this._type = _type;\n    }\n    isFile() {\n        return this._type === DIR_ENTRY_TYPE_FILE;\n    }\n    isDirectory() {\n        return this._type === DIR_ENTRY_TYPE_DIR;\n    }\n}\nclass FSWatcher {\n    constructor(_apiClient, _path, _options, _listener){\n        this._closed = false;\n        this._apiClient = _apiClient;\n        this._path = _path;\n        this._options = _options;\n        this._listener = _listener;\n        this._apiClient._watchers.add(this);\n        this._wrappedListener = (event, filename)=>{\n            if (this._listener && !this._closed) {\n                this._listener(event, filename);\n            }\n        };\n        this._apiClient._fs.watch(this._path, this._options, proxyListener(this._wrappedListener)).then((_watcher)=>{\n            this._watcher = _watcher;\n            if (this._closed) {\n                return this._teardown();\n            }\n            return undefined;\n        }).catch(console.error);\n    }\n    async close() {\n        if (!this._closed) {\n            this._closed = true;\n            this._apiClient._watchers.delete(this);\n            await this._teardown();\n        }\n    }\n    /**\n     * @internal\n     */ async _teardown() {\n        await this._watcher?.close().finally(()=>{\n            this._watcher?.[_vendor_index_js__WEBPACK_IMPORTED_MODULE_2__.Comlink.releaseProxy]();\n        });\n    }\n}\n/**\n * @internal\n */ class WebContainerProcessImpl {\n    constructor(process, output, stdout, stderr){\n        this.output = output;\n        this._process = process;\n        this.input = new WritableStream({\n            write: (data)=>{\n                // this promise is not supposed to fail anyway\n                this._getProcess()?.write(data).catch(()=>{});\n            }\n        });\n        this.exit = this._onExit();\n        this.stdout = stdout;\n        this.stderr = stderr;\n    }\n    kill() {\n        this._process?.kill();\n    }\n    resize(dimensions) {\n        this._getProcess()?.resize(dimensions);\n    }\n    async _onExit() {\n        try {\n            return await this._process.onExit;\n        } finally{\n            this._process?.[_vendor_index_js__WEBPACK_IMPORTED_MODULE_2__.Comlink.releaseProxy]();\n            this._process = null;\n        }\n    }\n    _getProcess() {\n        if (this._process == null) {\n            console.warn(\"This process already exited\");\n        }\n        return this._process;\n    }\n}\n/**\n * @internal\n */ class FileSystemAPIClient {\n    constructor(fs){\n        this._watchers = new Set([]);\n        this._fs = fs;\n    }\n    rm(...args) {\n        return this._fs.rm(...args);\n    }\n    async readFile(path, encoding) {\n        return await this._fs.readFile(path, encoding);\n    }\n    async rename(oldPath, newPath) {\n        return await this._fs.rename(oldPath, newPath);\n    }\n    async writeFile(path, data, options) {\n        if (data instanceof Uint8Array) {\n            const buffer = data.buffer.slice(data.byteOffset, data.byteOffset + data.byteLength);\n            data = _vendor_index_js__WEBPACK_IMPORTED_MODULE_2__.Comlink.transfer(new Uint8Array(buffer), [\n                buffer\n            ]);\n        }\n        await this._fs.writeFile(path, data, options);\n    }\n    async readdir(path, options) {\n        const result = await this._fs.readdir(path, options);\n        if (isStringArray(result)) {\n            return result;\n        }\n        if (isTypedArrayCollection(result)) {\n            return result;\n        }\n        const entries = result.map((entry)=>new DirEntImpl(entry.name, entry[\"Symbol(type)\"]));\n        return entries;\n    }\n    async mkdir(path, options) {\n        return await this._fs.mkdir(path, options);\n    }\n    watch(path, options, listener) {\n        if (typeof options === \"function\") {\n            listener = options;\n            options = null;\n        }\n        return new FSWatcher(this, path, options, listener);\n    }\n    /**\n     * @internal\n     */ async _teardown() {\n        this._fs[_vendor_index_js__WEBPACK_IMPORTED_MODULE_2__.Comlink.releaseProxy]();\n        await Promise.all([\n            ...this._watchers\n        ].map((watcher)=>watcher.close()));\n    }\n}\nasync function unsynchronizedBoot(options) {\n    const { serverPromise } = serverFactory(options);\n    const server = await serverPromise;\n    const instance = await server.build({\n        host: window.location.host,\n        version: \"1.6.1\",\n        workdirName: options.workdirName,\n        forwardPreviewErrors: options.forwardPreviewErrors\n    });\n    const [fs, previewScript, runtimeInfo] = await Promise.all([\n        instance.fs(),\n        instance.previewScript(),\n        instance.runtimeInfo()\n    ]);\n    return new WebContainer(instance, fs, previewScript, runtimeInfo);\n}\nfunction binaryListener(listener) {\n    if (listener == null) {\n        return undefined;\n    }\n    return (data)=>{\n        if (data instanceof Uint8Array) {\n            listener(decoder.decode(data));\n        } else if (data == null) {\n            listener(null);\n        }\n    };\n}\nfunction proxyListener(listener) {\n    if (listener == null) {\n        return undefined;\n    }\n    return _vendor_index_js__WEBPACK_IMPORTED_MODULE_2__.Comlink.proxy(listener);\n}\nfunction serverFactory(options) {\n    if (cachedServerPromise != null) {\n        if (options.coep !== cachedBootOptions.coep) {\n            console.warn(`Attempting to boot WebContainer with 'coep: ${options.coep}'`);\n            console.warn(`First boot had 'coep: ${cachedBootOptions.coep}', new settings will not take effect!`);\n        }\n        return {\n            serverPromise: cachedServerPromise\n        };\n    }\n    if (options.coep) {\n        _internal_iframe_url_js__WEBPACK_IMPORTED_MODULE_4__.iframeSettings.setQueryParam(\"coep\", options.coep);\n    }\n    if (options.experimentalNode) {\n        _internal_iframe_url_js__WEBPACK_IMPORTED_MODULE_4__.iframeSettings.setQueryParam(\"experimental_node\", \"1\");\n    }\n    const iframe = document.createElement(\"iframe\");\n    iframe.style.display = \"none\";\n    iframe.setAttribute(\"allow\", \"cross-origin-isolated\");\n    const url = _internal_iframe_url_js__WEBPACK_IMPORTED_MODULE_4__.iframeSettings.url;\n    iframe.src = url.toString();\n    const { origin } = url;\n    cachedBootOptions = {\n        ...options\n    };\n    cachedServerPromise = new Promise((resolve)=>{\n        const onMessage = (event)=>{\n            if (event.origin !== origin) {\n                return;\n            }\n            const { data } = event;\n            if (data.type === \"init\") {\n                resolve(_vendor_index_js__WEBPACK_IMPORTED_MODULE_2__.Comlink.wrap(event.ports[0]));\n                return;\n            }\n            if (data.type === \"warning\") {\n                console[data.level].call(console, data.message);\n                return;\n            }\n        };\n        window.addEventListener(\"message\", onMessage);\n    });\n    document.body.insertBefore(iframe, null);\n    return {\n        serverPromise: cachedServerPromise\n    };\n}\nfunction isStringArray(list) {\n    return typeof list[0] === \"string\";\n}\nfunction isTypedArrayCollection(list) {\n    return list[0] instanceof Uint8Array;\n}\nfunction streamWithPush() {\n    let controller = null;\n    const stream = new ReadableStream({\n        start (controller_) {\n            controller = controller_;\n        }\n    });\n    const push = (item)=>{\n        if (item != null) {\n            controller?.enqueue(item);\n        } else {\n            controller?.close();\n            controller = null;\n        }\n    };\n    return {\n        stream,\n        push\n    };\n}\nfunction syncSubscription(listener) {\n    let stopped = false;\n    let unsubscribe = ()=>{};\n    const wrapped = (...args)=>{\n        if (stopped) {\n            return;\n        }\n        listener(...args);\n    };\n    return {\n        subscribe (promise) {\n            promise.then((unsubscribe_)=>{\n                unsubscribe = unsubscribe_;\n                if (stopped) {\n                    unsubscribe();\n                }\n            });\n            return ()=>{\n                stopped = true;\n                unsubscribe();\n            };\n        },\n        listener: wrapped\n    };\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/@webcontainer/api/dist/index.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/@webcontainer/api/dist/internal/TypedEventTarget.js":
/*!**************************************************************************!*\
  !*** ./node_modules/@webcontainer/api/dist/internal/TypedEventTarget.js ***!
  \**************************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   TypedEventTarget: () => (/* binding */ TypedEventTarget)\n/* harmony export */ });\nclass TypedEventTarget {\n    listen(listener) {\n        function wrappedListener(event) {\n            listener(event.data);\n        }\n        this._bus.addEventListener(\"message\", wrappedListener);\n        return ()=>this._bus.removeEventListener(\"message\", wrappedListener);\n    }\n    fireEvent(data) {\n        this._bus.dispatchEvent(new MessageEvent(\"message\", {\n            data\n        }));\n    }\n    constructor(){\n        this._bus = new EventTarget();\n    }\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvQHdlYmNvbnRhaW5lci9hcGkvZGlzdC9pbnRlcm5hbC9UeXBlZEV2ZW50VGFyZ2V0LmpzIiwibWFwcGluZ3MiOiI7Ozs7QUFBTyxNQUFNQTtJQUVUQyxPQUFPQyxRQUFRLEVBQUU7UUFDYixTQUFTQyxnQkFBZ0JDLEtBQUs7WUFDMUJGLFNBQVNFLE1BQU1DLElBQUk7UUFDdkI7UUFDQSxJQUFJLENBQUNDLElBQUksQ0FBQ0MsZ0JBQWdCLENBQUMsV0FBV0o7UUFDdEMsT0FBTyxJQUFNLElBQUksQ0FBQ0csSUFBSSxDQUFDRSxtQkFBbUIsQ0FBQyxXQUFXTDtJQUMxRDtJQUNBTSxVQUFVSixJQUFJLEVBQUU7UUFDWixJQUFJLENBQUNDLElBQUksQ0FBQ0ksYUFBYSxDQUFDLElBQUlDLGFBQWEsV0FBVztZQUFFTjtRQUFLO0lBQy9EOzthQVZBQyxPQUFPLElBQUlNOztBQVdmIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vYWktb3MtbXZwLy4vbm9kZV9tb2R1bGVzL0B3ZWJjb250YWluZXIvYXBpL2Rpc3QvaW50ZXJuYWwvVHlwZWRFdmVudFRhcmdldC5qcz9lOTUwIl0sInNvdXJjZXNDb250ZW50IjpbImV4cG9ydCBjbGFzcyBUeXBlZEV2ZW50VGFyZ2V0IHtcbiAgICBfYnVzID0gbmV3IEV2ZW50VGFyZ2V0KCk7XG4gICAgbGlzdGVuKGxpc3RlbmVyKSB7XG4gICAgICAgIGZ1bmN0aW9uIHdyYXBwZWRMaXN0ZW5lcihldmVudCkge1xuICAgICAgICAgICAgbGlzdGVuZXIoZXZlbnQuZGF0YSk7XG4gICAgICAgIH1cbiAgICAgICAgdGhpcy5fYnVzLmFkZEV2ZW50TGlzdGVuZXIoJ21lc3NhZ2UnLCB3cmFwcGVkTGlzdGVuZXIpO1xuICAgICAgICByZXR1cm4gKCkgPT4gdGhpcy5fYnVzLnJlbW92ZUV2ZW50TGlzdGVuZXIoJ21lc3NhZ2UnLCB3cmFwcGVkTGlzdGVuZXIpO1xuICAgIH1cbiAgICBmaXJlRXZlbnQoZGF0YSkge1xuICAgICAgICB0aGlzLl9idXMuZGlzcGF0Y2hFdmVudChuZXcgTWVzc2FnZUV2ZW50KCdtZXNzYWdlJywgeyBkYXRhIH0pKTtcbiAgICB9XG59XG4iXSwibmFtZXMiOlsiVHlwZWRFdmVudFRhcmdldCIsImxpc3RlbiIsImxpc3RlbmVyIiwid3JhcHBlZExpc3RlbmVyIiwiZXZlbnQiLCJkYXRhIiwiX2J1cyIsImFkZEV2ZW50TGlzdGVuZXIiLCJyZW1vdmVFdmVudExpc3RlbmVyIiwiZmlyZUV2ZW50IiwiZGlzcGF0Y2hFdmVudCIsIk1lc3NhZ2VFdmVudCIsIkV2ZW50VGFyZ2V0Il0sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/@webcontainer/api/dist/internal/TypedEventTarget.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/@webcontainer/api/dist/internal/auth-state.js":
/*!********************************************************************!*\
  !*** ./node_modules/@webcontainer/api/dist/internal/auth-state.js ***!
  \********************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   assertAuthTokens: () => (/* binding */ assertAuthTokens),\n/* harmony export */   auth: () => (/* binding */ auth),\n/* harmony export */   authState: () => (/* binding */ authState)\n/* harmony export */ });\n/* harmony import */ var _tokens_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./tokens.js */ \"(ssr)/./node_modules/@webcontainer/api/dist/internal/tokens.js\");\n/* harmony import */ var _constants_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./constants.js */ \"(ssr)/./node_modules/@webcontainer/api/dist/internal/constants.js\");\n/* harmony import */ var _iframe_url_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./iframe-url.js */ \"(ssr)/./node_modules/@webcontainer/api/dist/internal/iframe-url.js\");\n/* harmony import */ var _code_js__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./code.js */ \"(ssr)/./node_modules/@webcontainer/api/dist/internal/code.js\");\n/* harmony import */ var _reset_promise_js__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ./reset-promise.js */ \"(ssr)/./node_modules/@webcontainer/api/dist/internal/reset-promise.js\");\n/* harmony import */ var _TypedEventTarget_js__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ./TypedEventTarget.js */ \"(ssr)/./node_modules/@webcontainer/api/dist/internal/TypedEventTarget.js\");\n\n\n\n\n\n\n/**\n * @internal\n */ const authState = {\n    initialized: false,\n    bootCalled: false,\n    authComplete: (0,_reset_promise_js__WEBPACK_IMPORTED_MODULE_4__.resettablePromise)(),\n    clientId: \"\",\n    oauthScope: \"\",\n    broadcastChannel: null,\n    get editorOrigin () {\n        return _iframe_url_js__WEBPACK_IMPORTED_MODULE_2__.iframeSettings.editorOrigin;\n    },\n    tokens: null\n};\nconst authFailedListeners = new _TypedEventTarget_js__WEBPACK_IMPORTED_MODULE_5__.TypedEventTarget();\nconst loggedOutListeners = new _TypedEventTarget_js__WEBPACK_IMPORTED_MODULE_5__.TypedEventTarget();\nfunction broadcastMessage(message) {\n    if (!authState.broadcastChannel) {\n        return;\n    }\n    authState.broadcastChannel.postMessage(message);\n    // check if we are in a popup mode\n    if (localStorage.getItem(_constants_js__WEBPACK_IMPORTED_MODULE_1__.STORAGE_POPUP_NAME) === \"true\" && message.type !== \"auth-logout\") {\n        localStorage.removeItem(_constants_js__WEBPACK_IMPORTED_MODULE_1__.STORAGE_POPUP_NAME);\n        // wait a tick to make sure the posted message has been sent\n        setTimeout(()=>{\n            window.close();\n        });\n    }\n}\nconst auth = {\n    init ({ editorOrigin, clientId, scope }) {\n        if (authState.initialized) {\n            throw new Error(\"Init should only be called once\");\n        }\n        let enterprise = true;\n        if (enterprise && authState.bootCalled) {\n            throw new Error(\"`auth.init` should always be called before `WebContainer.boot`\");\n        }\n        authState.initialized = true;\n        authState.tokens = _tokens_js__WEBPACK_IMPORTED_MODULE_0__.Tokens.fromStorage();\n        authState.clientId = clientId;\n        authState.oauthScope = scope;\n        authState.broadcastChannel = new BroadcastChannel(_constants_js__WEBPACK_IMPORTED_MODULE_1__.BROADCAST_CHANNEL_NAME);\n        // configure iframe url\n        _iframe_url_js__WEBPACK_IMPORTED_MODULE_2__.iframeSettings.setQueryParam(\"client_id\", clientId);\n        if (editorOrigin) {\n            _iframe_url_js__WEBPACK_IMPORTED_MODULE_2__.iframeSettings.editorOrigin = new URL(editorOrigin).origin;\n        }\n        loggedOutListeners.listen(()=>authState.authComplete.reset());\n        // if authentication or logout are done in another page, we want to reflect the state on this page as well\n        authState.broadcastChannel.addEventListener(\"message\", onChannelMessage);\n        async function onChannelMessage(event) {\n            const typedEvent = event.data;\n            if (typedEvent.type === \"auth-complete\") {\n                authState.tokens = _tokens_js__WEBPACK_IMPORTED_MODULE_0__.Tokens.fromStorage();\n                // we ignore the possible error here because they can't have expired just yet\n                await authState.tokens.activate(onFailedTokenRefresh);\n                authState.authComplete.resolve();\n                return;\n            }\n            if (typedEvent.type === \"auth-failed\") {\n                authFailedListeners.fireEvent(typedEvent);\n                return;\n            }\n            if (typedEvent.type === \"auth-logout\") {\n                loggedOutListeners.fireEvent();\n                return;\n            }\n        }\n        if (authState.tokens) {\n            const tokens = authState.tokens;\n            if (tokens.origin === authState.editorOrigin) {\n                /**\n                 * Here we assume that the refresh token never expires which\n                 * might not be correct. If that is the case though, we will\n                 * emit a 'logged-out' event to signal that the user has been\n                 * logged out, which could also happen at a later time anyway.\n                 *\n                 * Because this flow is done entirely locally, we do not broadcast\n                 * anything to the other tabs. They should be performing a similar\n                 * check.\n                 */ (async ()=>{\n                    const success = await tokens.activate(onFailedTokenRefresh);\n                    if (!success) {\n                        // if we got new token in the meantime we discard this error\n                        if (authState.tokens !== tokens) {\n                            return;\n                        }\n                        loggedOutListeners.fireEvent();\n                        return;\n                    }\n                    authState.authComplete.resolve();\n                })();\n                return {\n                    status: \"authorized\"\n                };\n            }\n            (0,_tokens_js__WEBPACK_IMPORTED_MODULE_0__.clearTokensInStorage)();\n            authState.tokens = null;\n        }\n        const locationURL = new URL(window.location.href);\n        const { searchParams } = locationURL;\n        const updateURL = ()=>window.history.replaceState({}, document.title, locationURL);\n        // check for errors first, aka the user declined the authorisation or stackblitz did\n        if (searchParams.has(_constants_js__WEBPACK_IMPORTED_MODULE_1__.SEARCH_PARAM_ERROR)) {\n            const error = searchParams.get(_constants_js__WEBPACK_IMPORTED_MODULE_1__.SEARCH_PARAM_ERROR);\n            const description = searchParams.get(_constants_js__WEBPACK_IMPORTED_MODULE_1__.SEARCH_PARAM_ERROR_DESCRIPTION);\n            searchParams.delete(_constants_js__WEBPACK_IMPORTED_MODULE_1__.SEARCH_PARAM_ERROR);\n            searchParams.delete(_constants_js__WEBPACK_IMPORTED_MODULE_1__.SEARCH_PARAM_ERROR_DESCRIPTION);\n            updateURL();\n            broadcastMessage({\n                type: \"auth-failed\",\n                error,\n                description\n            });\n            return {\n                status: \"auth-failed\",\n                error,\n                description\n            };\n        }\n        // if there's an auth code\n        if (searchParams.has(_constants_js__WEBPACK_IMPORTED_MODULE_1__.SEARCH_PARAM_AUTH_CODE)) {\n            const authCode = searchParams.get(_constants_js__WEBPACK_IMPORTED_MODULE_1__.SEARCH_PARAM_AUTH_CODE);\n            const editorOrigin = authState.editorOrigin;\n            searchParams.delete(_constants_js__WEBPACK_IMPORTED_MODULE_1__.SEARCH_PARAM_AUTH_CODE);\n            updateURL();\n            const codeVerifier = localStorage.getItem(_constants_js__WEBPACK_IMPORTED_MODULE_1__.STORAGE_CODE_VERIFIER_NAME);\n            if (!codeVerifier) {\n                return {\n                    status: \"need-auth\"\n                };\n            }\n            localStorage.removeItem(_constants_js__WEBPACK_IMPORTED_MODULE_1__.STORAGE_CODE_VERIFIER_NAME);\n            _tokens_js__WEBPACK_IMPORTED_MODULE_0__.Tokens.fromAuthCode({\n                editorOrigin,\n                clientId: authState.clientId,\n                authCode,\n                codeVerifier,\n                redirectUri: defaultRedirectUri()\n            }).then(async (tokens)=>{\n                authState.tokens = tokens;\n                assertAuthTokens(authState.tokens);\n                const success = await authState.tokens.activate(onFailedTokenRefresh);\n                // if authentication failed we throw, and we'll mark auth as failed\n                if (!success) {\n                    throw new Error();\n                }\n                authState.authComplete.resolve();\n                broadcastMessage({\n                    type: \"auth-complete\"\n                });\n            }).catch((error)=>{\n                // this should never happen unless the rails app is now down for some reason?\n                console.error(error);\n                // treat it as a logged out event so that the user can retry to login\n                loggedOutListeners.fireEvent();\n                broadcastMessage({\n                    type: \"auth-logout\"\n                });\n            });\n            return {\n                status: \"authorized\"\n            };\n        }\n        return {\n            status: \"need-auth\"\n        };\n    },\n    async startAuthFlow ({ popup } = {}) {\n        if (!authState.initialized) {\n            throw new Error(\"auth.init must be called first\");\n        }\n        if (popup) {\n            localStorage.setItem(_constants_js__WEBPACK_IMPORTED_MODULE_1__.STORAGE_POPUP_NAME, \"true\");\n            const height = 500;\n            const width = 620;\n            const left = window.screenLeft + (window.outerWidth - width) / 2;\n            const top = window.screenTop + (window.outerHeight - height) / 2;\n            window.open(await generateOAuthRequest(), \"_blank\", `popup,width=${width},height=${height},left=${left},top=${top}`);\n        } else {\n            window.location.href = await generateOAuthRequest();\n        }\n    },\n    async logout ({ ignoreRevokeError } = {}) {\n        await authState.tokens?.revoke(authState.clientId, ignoreRevokeError ?? false);\n        loggedOutListeners.fireEvent();\n        broadcastMessage({\n            type: \"auth-logout\"\n        });\n    },\n    loggedIn () {\n        return authState.authComplete.promise;\n    },\n    on (event, listener) {\n        switch(event){\n            case \"auth-failed\":\n                {\n                    return authFailedListeners.listen(listener);\n                }\n            case \"logged-out\":\n                {\n                    return loggedOutListeners.listen(listener);\n                }\n            default:\n                {\n                    throw new Error(`Unsupported event type '${event}'.`);\n                }\n        }\n    }\n};\nfunction onFailedTokenRefresh() {\n    loggedOutListeners.fireEvent();\n    broadcastMessage({\n        type: \"auth-logout\"\n    });\n}\nfunction defaultRedirectUri() {\n    return window.location.href;\n}\nasync function generateOAuthRequest() {\n    const codeVerifier = (0,_code_js__WEBPACK_IMPORTED_MODULE_3__.newCodeVerifier)();\n    localStorage.setItem(_constants_js__WEBPACK_IMPORTED_MODULE_1__.STORAGE_CODE_VERIFIER_NAME, codeVerifier);\n    const codeChallenge = await (0,_code_js__WEBPACK_IMPORTED_MODULE_3__.S256)(codeVerifier);\n    const url = new URL(\"/oauth/authorize\", authState.editorOrigin);\n    const { searchParams } = url;\n    searchParams.append(\"response_type\", \"code\");\n    searchParams.append(\"client_id\", authState.clientId);\n    searchParams.append(\"redirect_uri\", defaultRedirectUri());\n    searchParams.append(\"scope\", authState.oauthScope);\n    searchParams.append(\"code_challenge\", codeChallenge);\n    searchParams.append(\"code_challenge_method\", \"S256\");\n    return url.toString();\n}\n/**\n * @internal\n */ function assertAuthTokens(tokens) {\n    if (!tokens) {\n        throw new Error(\"Oops! Tokens is not defined when it always should be.\");\n    }\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/@webcontainer/api/dist/internal/auth-state.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/@webcontainer/api/dist/internal/code.js":
/*!**************************************************************!*\
  !*** ./node_modules/@webcontainer/api/dist/internal/code.js ***!
  \**************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   S256: () => (/* binding */ S256),\n/* harmony export */   newCodeVerifier: () => (/* binding */ newCodeVerifier)\n/* harmony export */ });\n/**\n * Implementation of https://www.rfc-editor.org/rfc/rfc7636#section-4.2 that can\n * run in the browser.\n *\n * @internal\n *\n * @param input Code verifier.\n */ async function S256(input) {\n    // input here is assumed to match https://www.rfc-editor.org/rfc/rfc3986#section-2.3\n    const ascii = new TextEncoder().encode(input);\n    const sha256 = new Uint8Array(await crypto.subtle.digest(\"SHA-256\", ascii));\n    // base64url encode, based on https://developer.mozilla.org/en-US/docs/Glossary/Base64#the_unicode_problem\n    return btoa(sha256.reduce((binary, byte)=>binary + String.fromCodePoint(byte), \"\")).replace(/\\+/g, \"-\").replace(/\\//g, \"_\").replace(/=+$/, \"\");\n}\n/**\n * Implementation of https://www.rfc-editor.org/rfc/rfc7636#section-4.1 with\n * a slight deviation:\n *\n *  - We use 128 characters (it's expected to be between 43 and 128)\n *  - We use 64 characters instead of 66\n *\n * So the entropy is lower given the space size is 64^128 instead of 66^128.\n * It still satisfies the entropy constraint given that 64^128 > 66^43.\n *\n * @internal\n */ function newCodeVerifier() {\n    const random = new Uint8Array(96);\n    crypto.getRandomValues(random);\n    let codeVerifier = \"\";\n    for(let i = 0; i < 32; ++i){\n        codeVerifier += nextFourChars(random[3 * i + 0], random[3 * i + 1], random[3 * i + 2]);\n    }\n    return codeVerifier;\n}\nfunction nextFourChars(byte1, byte2, byte3) {\n    const char1 = byte1 >> 2;\n    const char2 = (byte1 & 3) << 4 | byte2 >> 4;\n    const char3 = byte2 & 15 | (byte3 & 192) >> 2;\n    const char4 = byte3 & 63;\n    return [\n        char1,\n        char2,\n        char3,\n        char4\n    ].map(unreservedCharacters).join(\"\");\n}\nfunction unreservedCharacters(code) {\n    let offset;\n    if (code < 26) {\n        offset = code + 65; // [A-Z]\n    } else if (code < 52) {\n        offset = code - 26 + 97; // [a-z]\n    } else if (code < 62) {\n        offset = code - 52 + 48; // [0-9]\n    } else {\n        offset = code === 62 ? 30 /* _ */  : 45 /* - */ ;\n    }\n    return String.fromCharCode(offset);\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvQHdlYmNvbnRhaW5lci9hcGkvZGlzdC9pbnRlcm5hbC9jb2RlLmpzIiwibWFwcGluZ3MiOiI7Ozs7O0FBQUE7Ozs7Ozs7Q0FPQyxHQUNNLGVBQWVBLEtBQUtDLEtBQUs7SUFDNUIsb0ZBQW9GO0lBQ3BGLE1BQU1DLFFBQVEsSUFBSUMsY0FBY0MsTUFBTSxDQUFDSDtJQUN2QyxNQUFNSSxTQUFTLElBQUlDLFdBQVcsTUFBTUMsT0FBT0MsTUFBTSxDQUFDQyxNQUFNLENBQUMsV0FBV1A7SUFDcEUsMEdBQTBHO0lBQzFHLE9BQU9RLEtBQUtMLE9BQU9NLE1BQU0sQ0FBQyxDQUFDQyxRQUFRQyxPQUFTRCxTQUFTRSxPQUFPQyxhQUFhLENBQUNGLE9BQU8sS0FDNUVHLE9BQU8sQ0FBQyxPQUFPLEtBQ2ZBLE9BQU8sQ0FBQyxPQUFPLEtBQ2ZBLE9BQU8sQ0FBQyxPQUFPO0FBQ3hCO0FBQ0E7Ozs7Ozs7Ozs7O0NBV0MsR0FDTSxTQUFTQztJQUNaLE1BQU1DLFNBQVMsSUFBSVosV0FBVztJQUM5QkMsT0FBT1ksZUFBZSxDQUFDRDtJQUN2QixJQUFJRSxlQUFlO0lBQ25CLElBQUssSUFBSUMsSUFBSSxHQUFHQSxJQUFJLElBQUksRUFBRUEsRUFBRztRQUN6QkQsZ0JBQWdCRSxjQUFjSixNQUFNLENBQUMsSUFBSUcsSUFBSSxFQUFFLEVBQUVILE1BQU0sQ0FBQyxJQUFJRyxJQUFJLEVBQUUsRUFBRUgsTUFBTSxDQUFDLElBQUlHLElBQUksRUFBRTtJQUN6RjtJQUNBLE9BQU9EO0FBQ1g7QUFDQSxTQUFTRSxjQUFjQyxLQUFLLEVBQUVDLEtBQUssRUFBRUMsS0FBSztJQUN0QyxNQUFNQyxRQUFRSCxTQUFTO0lBQ3ZCLE1BQU1JLFFBQVEsQ0FBRUosUUFBUSxNQUFNLElBQU1DLFNBQVM7SUFDN0MsTUFBTUksUUFBUSxRQUFTLEtBQU8sQ0FBQ0gsUUFBUSxHQUFFLEtBQU07SUFDL0MsTUFBTUksUUFBUUosUUFBUTtJQUN0QixPQUFPO1FBQUNDO1FBQU9DO1FBQU9DO1FBQU9DO0tBQU0sQ0FBQ0MsR0FBRyxDQUFDQyxzQkFBc0JDLElBQUksQ0FBQztBQUN2RTtBQUNBLFNBQVNELHFCQUFxQkUsSUFBSTtJQUM5QixJQUFJQztJQUNKLElBQUlELE9BQU8sSUFBSTtRQUNYQyxTQUFTRCxPQUFPLElBQUksUUFBUTtJQUNoQyxPQUNLLElBQUlBLE9BQU8sSUFBSTtRQUNoQkMsU0FBU0QsT0FBTyxLQUFLLElBQUksUUFBUTtJQUNyQyxPQUNLLElBQUlBLE9BQU8sSUFBSTtRQUNoQkMsU0FBU0QsT0FBTyxLQUFLLElBQUksUUFBUTtJQUNyQyxPQUNLO1FBQ0RDLFNBQVNELFNBQVMsS0FBSyxHQUFHLEtBQUssTUFBSyxHQUFHLEtBQUs7SUFDaEQ7SUFDQSxPQUFPbkIsT0FBT3FCLFlBQVksQ0FBQ0Q7QUFDL0IiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9haS1vcy1tdnAvLi9ub2RlX21vZHVsZXMvQHdlYmNvbnRhaW5lci9hcGkvZGlzdC9pbnRlcm5hbC9jb2RlLmpzPzNjMDAiXSwic291cmNlc0NvbnRlbnQiOlsiLyoqXG4gKiBJbXBsZW1lbnRhdGlvbiBvZiBodHRwczovL3d3dy5yZmMtZWRpdG9yLm9yZy9yZmMvcmZjNzYzNiNzZWN0aW9uLTQuMiB0aGF0IGNhblxuICogcnVuIGluIHRoZSBicm93c2VyLlxuICpcbiAqIEBpbnRlcm5hbFxuICpcbiAqIEBwYXJhbSBpbnB1dCBDb2RlIHZlcmlmaWVyLlxuICovXG5leHBvcnQgYXN5bmMgZnVuY3Rpb24gUzI1NihpbnB1dCkge1xuICAgIC8vIGlucHV0IGhlcmUgaXMgYXNzdW1lZCB0byBtYXRjaCBodHRwczovL3d3dy5yZmMtZWRpdG9yLm9yZy9yZmMvcmZjMzk4NiNzZWN0aW9uLTIuM1xuICAgIGNvbnN0IGFzY2lpID0gbmV3IFRleHRFbmNvZGVyKCkuZW5jb2RlKGlucHV0KTtcbiAgICBjb25zdCBzaGEyNTYgPSBuZXcgVWludDhBcnJheShhd2FpdCBjcnlwdG8uc3VidGxlLmRpZ2VzdCgnU0hBLTI1NicsIGFzY2lpKSk7XG4gICAgLy8gYmFzZTY0dXJsIGVuY29kZSwgYmFzZWQgb24gaHR0cHM6Ly9kZXZlbG9wZXIubW96aWxsYS5vcmcvZW4tVVMvZG9jcy9HbG9zc2FyeS9CYXNlNjQjdGhlX3VuaWNvZGVfcHJvYmxlbVxuICAgIHJldHVybiBidG9hKHNoYTI1Ni5yZWR1Y2UoKGJpbmFyeSwgYnl0ZSkgPT4gYmluYXJ5ICsgU3RyaW5nLmZyb21Db2RlUG9pbnQoYnl0ZSksICcnKSlcbiAgICAgICAgLnJlcGxhY2UoL1xcKy9nLCAnLScpXG4gICAgICAgIC5yZXBsYWNlKC9cXC8vZywgJ18nKVxuICAgICAgICAucmVwbGFjZSgvPSskLywgJycpO1xufVxuLyoqXG4gKiBJbXBsZW1lbnRhdGlvbiBvZiBodHRwczovL3d3dy5yZmMtZWRpdG9yLm9yZy9yZmMvcmZjNzYzNiNzZWN0aW9uLTQuMSB3aXRoXG4gKiBhIHNsaWdodCBkZXZpYXRpb246XG4gKlxuICogIC0gV2UgdXNlIDEyOCBjaGFyYWN0ZXJzIChpdCdzIGV4cGVjdGVkIHRvIGJlIGJldHdlZW4gNDMgYW5kIDEyOClcbiAqICAtIFdlIHVzZSA2NCBjaGFyYWN0ZXJzIGluc3RlYWQgb2YgNjZcbiAqXG4gKiBTbyB0aGUgZW50cm9weSBpcyBsb3dlciBnaXZlbiB0aGUgc3BhY2Ugc2l6ZSBpcyA2NF4xMjggaW5zdGVhZCBvZiA2Nl4xMjguXG4gKiBJdCBzdGlsbCBzYXRpc2ZpZXMgdGhlIGVudHJvcHkgY29uc3RyYWludCBnaXZlbiB0aGF0IDY0XjEyOCA+IDY2XjQzLlxuICpcbiAqIEBpbnRlcm5hbFxuICovXG5leHBvcnQgZnVuY3Rpb24gbmV3Q29kZVZlcmlmaWVyKCkge1xuICAgIGNvbnN0IHJhbmRvbSA9IG5ldyBVaW50OEFycmF5KDk2KTtcbiAgICBjcnlwdG8uZ2V0UmFuZG9tVmFsdWVzKHJhbmRvbSk7XG4gICAgbGV0IGNvZGVWZXJpZmllciA9ICcnO1xuICAgIGZvciAobGV0IGkgPSAwOyBpIDwgMzI7ICsraSkge1xuICAgICAgICBjb2RlVmVyaWZpZXIgKz0gbmV4dEZvdXJDaGFycyhyYW5kb21bMyAqIGkgKyAwXSwgcmFuZG9tWzMgKiBpICsgMV0sIHJhbmRvbVszICogaSArIDJdKTtcbiAgICB9XG4gICAgcmV0dXJuIGNvZGVWZXJpZmllcjtcbn1cbmZ1bmN0aW9uIG5leHRGb3VyQ2hhcnMoYnl0ZTEsIGJ5dGUyLCBieXRlMykge1xuICAgIGNvbnN0IGNoYXIxID0gYnl0ZTEgPj4gMjtcbiAgICBjb25zdCBjaGFyMiA9ICgoYnl0ZTEgJiAzKSA8PCA0KSB8IChieXRlMiA+PiA0KTtcbiAgICBjb25zdCBjaGFyMyA9IChieXRlMiAmIDE1KSB8ICgoYnl0ZTMgJiAxOTIpID4+IDIpO1xuICAgIGNvbnN0IGNoYXI0ID0gYnl0ZTMgJiA2MztcbiAgICByZXR1cm4gW2NoYXIxLCBjaGFyMiwgY2hhcjMsIGNoYXI0XS5tYXAodW5yZXNlcnZlZENoYXJhY3RlcnMpLmpvaW4oJycpO1xufVxuZnVuY3Rpb24gdW5yZXNlcnZlZENoYXJhY3RlcnMoY29kZSkge1xuICAgIGxldCBvZmZzZXQ7XG4gICAgaWYgKGNvZGUgPCAyNikge1xuICAgICAgICBvZmZzZXQgPSBjb2RlICsgNjU7IC8vIFtBLVpdXG4gICAgfVxuICAgIGVsc2UgaWYgKGNvZGUgPCA1Mikge1xuICAgICAgICBvZmZzZXQgPSBjb2RlIC0gMjYgKyA5NzsgLy8gW2Etel1cbiAgICB9XG4gICAgZWxzZSBpZiAoY29kZSA8IDYyKSB7XG4gICAgICAgIG9mZnNldCA9IGNvZGUgLSA1MiArIDQ4OyAvLyBbMC05XVxuICAgIH1cbiAgICBlbHNlIHtcbiAgICAgICAgb2Zmc2V0ID0gY29kZSA9PT0gNjIgPyAzMCAvKiBfICovIDogNDUgLyogLSAqLztcbiAgICB9XG4gICAgcmV0dXJuIFN0cmluZy5mcm9tQ2hhckNvZGUob2Zmc2V0KTtcbn1cbiJdLCJuYW1lcyI6WyJTMjU2IiwiaW5wdXQiLCJhc2NpaSIsIlRleHRFbmNvZGVyIiwiZW5jb2RlIiwic2hhMjU2IiwiVWludDhBcnJheSIsImNyeXB0byIsInN1YnRsZSIsImRpZ2VzdCIsImJ0b2EiLCJyZWR1Y2UiLCJiaW5hcnkiLCJieXRlIiwiU3RyaW5nIiwiZnJvbUNvZGVQb2ludCIsInJlcGxhY2UiLCJuZXdDb2RlVmVyaWZpZXIiLCJyYW5kb20iLCJnZXRSYW5kb21WYWx1ZXMiLCJjb2RlVmVyaWZpZXIiLCJpIiwibmV4dEZvdXJDaGFycyIsImJ5dGUxIiwiYnl0ZTIiLCJieXRlMyIsImNoYXIxIiwiY2hhcjIiLCJjaGFyMyIsImNoYXI0IiwibWFwIiwidW5yZXNlcnZlZENoYXJhY3RlcnMiLCJqb2luIiwiY29kZSIsIm9mZnNldCIsImZyb21DaGFyQ29kZSJdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/@webcontainer/api/dist/internal/code.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/@webcontainer/api/dist/internal/constants.js":
/*!*******************************************************************!*\
  !*** ./node_modules/@webcontainer/api/dist/internal/constants.js ***!
  \*******************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   BROADCAST_CHANNEL_NAME: () => (/* binding */ BROADCAST_CHANNEL_NAME),\n/* harmony export */   DEFAULT_EDITOR_ORIGIN: () => (/* binding */ DEFAULT_EDITOR_ORIGIN),\n/* harmony export */   SEARCH_PARAM_AUTH_CODE: () => (/* binding */ SEARCH_PARAM_AUTH_CODE),\n/* harmony export */   SEARCH_PARAM_ERROR: () => (/* binding */ SEARCH_PARAM_ERROR),\n/* harmony export */   SEARCH_PARAM_ERROR_DESCRIPTION: () => (/* binding */ SEARCH_PARAM_ERROR_DESCRIPTION),\n/* harmony export */   STORAGE_CODE_VERIFIER_NAME: () => (/* binding */ STORAGE_CODE_VERIFIER_NAME),\n/* harmony export */   STORAGE_POPUP_NAME: () => (/* binding */ STORAGE_POPUP_NAME),\n/* harmony export */   STORAGE_TOKENS_NAME: () => (/* binding */ STORAGE_TOKENS_NAME)\n/* harmony export */ });\nconst DEFAULT_EDITOR_ORIGIN = \"https://stackblitz.com\";\nconst SEARCH_PARAM_AUTH_CODE = \"code\";\nconst SEARCH_PARAM_ERROR = \"error\";\nconst SEARCH_PARAM_ERROR_DESCRIPTION = \"error_description\";\nconst BROADCAST_CHANNEL_NAME = \"__wc_api_bc__\";\nconst STORAGE_TOKENS_NAME = \"__wc_api_tokens__\";\nconst STORAGE_CODE_VERIFIER_NAME = \"__wc_api_verifier__\";\nconst STORAGE_POPUP_NAME = \"__wc_api_popup__\";\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvQHdlYmNvbnRhaW5lci9hcGkvZGlzdC9pbnRlcm5hbC9jb25zdGFudHMuanMiLCJtYXBwaW5ncyI6Ijs7Ozs7Ozs7Ozs7QUFBTyxNQUFNQSx3QkFBd0IseUJBQXlCO0FBQ3ZELE1BQU1DLHlCQUF5QixPQUFPO0FBQ3RDLE1BQU1DLHFCQUFxQixRQUFRO0FBQ25DLE1BQU1DLGlDQUFpQyxvQkFBb0I7QUFDM0QsTUFBTUMseUJBQXlCLGdCQUFnQjtBQUMvQyxNQUFNQyxzQkFBc0Isb0JBQW9CO0FBQ2hELE1BQU1DLDZCQUE2QixzQkFBc0I7QUFDekQsTUFBTUMscUJBQXFCLG1CQUFtQiIsInNvdXJjZXMiOlsid2VicGFjazovL2FpLW9zLW12cC8uL25vZGVfbW9kdWxlcy9Ad2ViY29udGFpbmVyL2FwaS9kaXN0L2ludGVybmFsL2NvbnN0YW50cy5qcz85ZmM1Il0sInNvdXJjZXNDb250ZW50IjpbImV4cG9ydCBjb25zdCBERUZBVUxUX0VESVRPUl9PUklHSU4gPSAnaHR0cHM6Ly9zdGFja2JsaXR6LmNvbSc7XG5leHBvcnQgY29uc3QgU0VBUkNIX1BBUkFNX0FVVEhfQ09ERSA9ICdjb2RlJztcbmV4cG9ydCBjb25zdCBTRUFSQ0hfUEFSQU1fRVJST1IgPSAnZXJyb3InO1xuZXhwb3J0IGNvbnN0IFNFQVJDSF9QQVJBTV9FUlJPUl9ERVNDUklQVElPTiA9ICdlcnJvcl9kZXNjcmlwdGlvbic7XG5leHBvcnQgY29uc3QgQlJPQURDQVNUX0NIQU5ORUxfTkFNRSA9ICdfX3djX2FwaV9iY19fJztcbmV4cG9ydCBjb25zdCBTVE9SQUdFX1RPS0VOU19OQU1FID0gJ19fd2NfYXBpX3Rva2Vuc19fJztcbmV4cG9ydCBjb25zdCBTVE9SQUdFX0NPREVfVkVSSUZJRVJfTkFNRSA9ICdfX3djX2FwaV92ZXJpZmllcl9fJztcbmV4cG9ydCBjb25zdCBTVE9SQUdFX1BPUFVQX05BTUUgPSAnX193Y19hcGlfcG9wdXBfXyc7XG4iXSwibmFtZXMiOlsiREVGQVVMVF9FRElUT1JfT1JJR0lOIiwiU0VBUkNIX1BBUkFNX0FVVEhfQ09ERSIsIlNFQVJDSF9QQVJBTV9FUlJPUiIsIlNFQVJDSF9QQVJBTV9FUlJPUl9ERVNDUklQVElPTiIsIkJST0FEQ0FTVF9DSEFOTkVMX05BTUUiLCJTVE9SQUdFX1RPS0VOU19OQU1FIiwiU1RPUkFHRV9DT0RFX1ZFUklGSUVSX05BTUUiLCJTVE9SQUdFX1BPUFVQX05BTUUiXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/@webcontainer/api/dist/internal/constants.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/@webcontainer/api/dist/internal/iframe-url.js":
/*!********************************************************************!*\
  !*** ./node_modules/@webcontainer/api/dist/internal/iframe-url.js ***!
  \********************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   iframeSettings: () => (/* binding */ iframeSettings)\n/* harmony export */ });\n/* harmony import */ var _constants_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./constants.js */ \"(ssr)/./node_modules/@webcontainer/api/dist/internal/constants.js\");\n\nconst params = {};\nlet editorOrigin = null;\nconst iframeSettings = {\n    get editorOrigin () {\n        if (editorOrigin == null) {\n            editorOrigin = new URL(globalThis.WEBCONTAINER_API_IFRAME_URL ?? _constants_js__WEBPACK_IMPORTED_MODULE_0__.DEFAULT_EDITOR_ORIGIN).origin;\n        }\n        return editorOrigin;\n    },\n    set editorOrigin (newOrigin){\n        editorOrigin = new URL(newOrigin).origin;\n    },\n    setQueryParam (key, value) {\n        params[key] = value;\n    },\n    get url () {\n        const url = new URL(this.editorOrigin);\n        url.pathname = \"/headless\";\n        for(const param in params){\n            url.searchParams.set(param, params[param]);\n        }\n        url.searchParams.set(\"version\", \"1.6.1\");\n        return url;\n    }\n};\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvQHdlYmNvbnRhaW5lci9hcGkvZGlzdC9pbnRlcm5hbC9pZnJhbWUtdXJsLmpzIiwibWFwcGluZ3MiOiI7Ozs7O0FBQXVEO0FBQ3ZELE1BQU1DLFNBQVMsQ0FBQztBQUNoQixJQUFJQyxlQUFlO0FBQ1osTUFBTUMsaUJBQWlCO0lBQzFCLElBQUlELGdCQUFlO1FBQ2YsSUFBSUEsZ0JBQWdCLE1BQU07WUFDdEJBLGVBQWUsSUFBSUUsSUFBSUMsV0FBV0MsMkJBQTJCLElBQUlOLGdFQUFxQkEsRUFBRU8sTUFBTTtRQUNsRztRQUNBLE9BQU9MO0lBQ1g7SUFDQSxJQUFJQSxjQUFhTSxVQUFXO1FBQ3hCTixlQUFlLElBQUlFLElBQUlJLFdBQVdELE1BQU07SUFDNUM7SUFDQUUsZUFBY0MsR0FBRyxFQUFFQyxLQUFLO1FBQ3BCVixNQUFNLENBQUNTLElBQUksR0FBR0M7SUFDbEI7SUFDQSxJQUFJQyxPQUFNO1FBQ04sTUFBTUEsTUFBTSxJQUFJUixJQUFJLElBQUksQ0FBQ0YsWUFBWTtRQUNyQ1UsSUFBSUMsUUFBUSxHQUFHO1FBQ2YsSUFBSyxNQUFNQyxTQUFTYixPQUFRO1lBQ3hCVyxJQUFJRyxZQUFZLENBQUNDLEdBQUcsQ0FBQ0YsT0FBT2IsTUFBTSxDQUFDYSxNQUFNO1FBQzdDO1FBQ0FGLElBQUlHLFlBQVksQ0FBQ0MsR0FBRyxDQUFDLFdBQVc7UUFDaEMsT0FBT0o7SUFDWDtBQUNKLEVBQUUiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9haS1vcy1tdnAvLi9ub2RlX21vZHVsZXMvQHdlYmNvbnRhaW5lci9hcGkvZGlzdC9pbnRlcm5hbC9pZnJhbWUtdXJsLmpzP2UwYzgiXSwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHsgREVGQVVMVF9FRElUT1JfT1JJR0lOIH0gZnJvbSAnLi9jb25zdGFudHMuanMnO1xuY29uc3QgcGFyYW1zID0ge307XG5sZXQgZWRpdG9yT3JpZ2luID0gbnVsbDtcbmV4cG9ydCBjb25zdCBpZnJhbWVTZXR0aW5ncyA9IHtcbiAgICBnZXQgZWRpdG9yT3JpZ2luKCkge1xuICAgICAgICBpZiAoZWRpdG9yT3JpZ2luID09IG51bGwpIHtcbiAgICAgICAgICAgIGVkaXRvck9yaWdpbiA9IG5ldyBVUkwoZ2xvYmFsVGhpcy5XRUJDT05UQUlORVJfQVBJX0lGUkFNRV9VUkwgPz8gREVGQVVMVF9FRElUT1JfT1JJR0lOKS5vcmlnaW47XG4gICAgICAgIH1cbiAgICAgICAgcmV0dXJuIGVkaXRvck9yaWdpbjtcbiAgICB9LFxuICAgIHNldCBlZGl0b3JPcmlnaW4obmV3T3JpZ2luKSB7XG4gICAgICAgIGVkaXRvck9yaWdpbiA9IG5ldyBVUkwobmV3T3JpZ2luKS5vcmlnaW47XG4gICAgfSxcbiAgICBzZXRRdWVyeVBhcmFtKGtleSwgdmFsdWUpIHtcbiAgICAgICAgcGFyYW1zW2tleV0gPSB2YWx1ZTtcbiAgICB9LFxuICAgIGdldCB1cmwoKSB7XG4gICAgICAgIGNvbnN0IHVybCA9IG5ldyBVUkwodGhpcy5lZGl0b3JPcmlnaW4pO1xuICAgICAgICB1cmwucGF0aG5hbWUgPSAnL2hlYWRsZXNzJztcbiAgICAgICAgZm9yIChjb25zdCBwYXJhbSBpbiBwYXJhbXMpIHtcbiAgICAgICAgICAgIHVybC5zZWFyY2hQYXJhbXMuc2V0KHBhcmFtLCBwYXJhbXNbcGFyYW1dKTtcbiAgICAgICAgfVxuICAgICAgICB1cmwuc2VhcmNoUGFyYW1zLnNldCgndmVyc2lvbicsIFwiMS42LjFcIik7XG4gICAgICAgIHJldHVybiB1cmw7XG4gICAgfSxcbn07XG4iXSwibmFtZXMiOlsiREVGQVVMVF9FRElUT1JfT1JJR0lOIiwicGFyYW1zIiwiZWRpdG9yT3JpZ2luIiwiaWZyYW1lU2V0dGluZ3MiLCJVUkwiLCJnbG9iYWxUaGlzIiwiV0VCQ09OVEFJTkVSX0FQSV9JRlJBTUVfVVJMIiwib3JpZ2luIiwibmV3T3JpZ2luIiwic2V0UXVlcnlQYXJhbSIsImtleSIsInZhbHVlIiwidXJsIiwicGF0aG5hbWUiLCJwYXJhbSIsInNlYXJjaFBhcmFtcyIsInNldCJdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/@webcontainer/api/dist/internal/iframe-url.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/@webcontainer/api/dist/internal/reset-promise.js":
/*!***********************************************************************!*\
  !*** ./node_modules/@webcontainer/api/dist/internal/reset-promise.js ***!
  \***********************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   resettablePromise: () => (/* binding */ resettablePromise)\n/* harmony export */ });\n/**\n * @internal\n */ function resettablePromise() {\n    let resolve;\n    let promise;\n    function reset() {\n        promise = new Promise((_resolve)=>resolve = _resolve);\n    }\n    reset();\n    return {\n        get promise () {\n            return promise;\n        },\n        resolve (value) {\n            return resolve(value);\n        },\n        reset\n    };\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvQHdlYmNvbnRhaW5lci9hcGkvZGlzdC9pbnRlcm5hbC9yZXNldC1wcm9taXNlLmpzIiwibWFwcGluZ3MiOiI7Ozs7QUFBQTs7Q0FFQyxHQUNNLFNBQVNBO0lBQ1osSUFBSUM7SUFDSixJQUFJQztJQUNKLFNBQVNDO1FBQ0xELFVBQVUsSUFBSUUsUUFBUSxDQUFDQyxXQUFjSixVQUFVSTtJQUNuRDtJQUNBRjtJQUNBLE9BQU87UUFDSCxJQUFJRCxXQUFVO1lBQ1YsT0FBT0E7UUFDWDtRQUNBRCxTQUFRSyxLQUFLO1lBQ1QsT0FBT0wsUUFBUUs7UUFDbkI7UUFDQUg7SUFDSjtBQUNKIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vYWktb3MtbXZwLy4vbm9kZV9tb2R1bGVzL0B3ZWJjb250YWluZXIvYXBpL2Rpc3QvaW50ZXJuYWwvcmVzZXQtcHJvbWlzZS5qcz8yYmIzIl0sInNvdXJjZXNDb250ZW50IjpbIi8qKlxuICogQGludGVybmFsXG4gKi9cbmV4cG9ydCBmdW5jdGlvbiByZXNldHRhYmxlUHJvbWlzZSgpIHtcbiAgICBsZXQgcmVzb2x2ZTtcbiAgICBsZXQgcHJvbWlzZTtcbiAgICBmdW5jdGlvbiByZXNldCgpIHtcbiAgICAgICAgcHJvbWlzZSA9IG5ldyBQcm9taXNlKChfcmVzb2x2ZSkgPT4gKHJlc29sdmUgPSBfcmVzb2x2ZSkpO1xuICAgIH1cbiAgICByZXNldCgpO1xuICAgIHJldHVybiB7XG4gICAgICAgIGdldCBwcm9taXNlKCkge1xuICAgICAgICAgICAgcmV0dXJuIHByb21pc2U7XG4gICAgICAgIH0sXG4gICAgICAgIHJlc29sdmUodmFsdWUpIHtcbiAgICAgICAgICAgIHJldHVybiByZXNvbHZlKHZhbHVlKTtcbiAgICAgICAgfSxcbiAgICAgICAgcmVzZXQsXG4gICAgfTtcbn1cbiJdLCJuYW1lcyI6WyJyZXNldHRhYmxlUHJvbWlzZSIsInJlc29sdmUiLCJwcm9taXNlIiwicmVzZXQiLCJQcm9taXNlIiwiX3Jlc29sdmUiLCJ2YWx1ZSJdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/@webcontainer/api/dist/internal/reset-promise.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/@webcontainer/api/dist/internal/tokens.js":
/*!****************************************************************!*\
  !*** ./node_modules/@webcontainer/api/dist/internal/tokens.js ***!
  \****************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   Tokens: () => (/* binding */ Tokens),\n/* harmony export */   addAccessTokenChangedListener: () => (/* binding */ addAccessTokenChangedListener),\n/* harmony export */   clearTokensInStorage: () => (/* binding */ clearTokensInStorage)\n/* harmony export */ });\n/* harmony import */ var _constants_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./constants.js */ \"(ssr)/./node_modules/@webcontainer/api/dist/internal/constants.js\");\n/* harmony import */ var _TypedEventTarget_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./TypedEventTarget.js */ \"(ssr)/./node_modules/@webcontainer/api/dist/internal/TypedEventTarget.js\");\n\n\nconst IGNORED_ERROR = new Error();\nIGNORED_ERROR.stack = \"\";\nconst accessTokenChangedListeners = new _TypedEventTarget_js__WEBPACK_IMPORTED_MODULE_1__.TypedEventTarget();\n/**\n * @internal\n */ class Tokens {\n    constructor(// editor origin that those tokens are bound to, mostly used for development\n    origin, // token to use to get a new access token\n    refresh, // token to provide to webcontainer\n    access, // time in UTC when the token expires\n    expires){\n        this._revoked = new AbortController();\n        this.origin = origin;\n        this.refresh = refresh;\n        this.access = access;\n        this.expires = expires;\n    }\n    async activate(onFailedRefresh) {\n        if (this._revoked.signal.aborted) {\n            throw new Error(\"Token revoked\");\n        }\n        // if the access token expired we fetch a new one\n        if (this.expires < Date.now()) {\n            if (!await this._fetchNewAccessToken()) {\n                return false;\n            }\n        }\n        this._sync();\n        this._startRefreshTokensLoop(onFailedRefresh);\n        return true;\n    }\n    async revoke(clientId, ignoreRevokeError) {\n        this._revoked.abort();\n        try {\n            const response = await fetch(`${this.origin}/oauth/revoke`, {\n                method: \"POST\",\n                headers: {\n                    \"Content-Type\": \"application/x-www-form-urlencoded\"\n                },\n                body: new URLSearchParams({\n                    token: this.refresh,\n                    token_type_hint: \"refresh_token\",\n                    client_id: clientId\n                }),\n                mode: \"cors\"\n            });\n            if (!response.ok) {\n                throw new Error(`Failed to logout`);\n            }\n        } catch (error) {\n            if (!ignoreRevokeError) {\n                throw error;\n            }\n        }\n        clearTokensInStorage();\n    }\n    static fromStorage() {\n        const savedTokens = readTokensFromStorage();\n        if (!savedTokens) {\n            return null;\n        }\n        return new Tokens(savedTokens.origin, savedTokens.refresh, savedTokens.access, savedTokens.expires);\n    }\n    static async fromAuthCode({ editorOrigin, clientId, codeVerifier, authCode, redirectUri }) {\n        const response = await fetch(`${editorOrigin}/oauth/token`, {\n            method: \"POST\",\n            headers: {\n                \"Content-Type\": \"application/x-www-form-urlencoded\"\n            },\n            body: new URLSearchParams({\n                client_id: clientId,\n                code: authCode,\n                code_verifier: codeVerifier,\n                grant_type: \"authorization_code\",\n                redirect_uri: redirectUri\n            }),\n            mode: \"cors\"\n        });\n        if (!response.ok) {\n            throw new Error(`Failed to fetch token: ${response.status}`);\n        }\n        const tokenResponse = await response.json();\n        assertTokenResponse(tokenResponse);\n        const { access_token: access, refresh_token: refresh } = tokenResponse;\n        const expires = getExpiresFromTokenResponse(tokenResponse);\n        return new Tokens(editorOrigin, refresh, access, expires);\n    }\n    async _fetchNewAccessToken() {\n        try {\n            const response = await fetch(`${this.origin}/oauth/token`, {\n                method: \"POST\",\n                headers: {\n                    \"Content-Type\": \"application/x-www-form-urlencoded\"\n                },\n                body: new URLSearchParams({\n                    grant_type: \"refresh_token\",\n                    refresh_token: this.refresh\n                }),\n                mode: \"cors\",\n                signal: this._revoked.signal\n            });\n            if (!response.ok) {\n                throw IGNORED_ERROR;\n            }\n            const tokenResponse = await response.json();\n            assertTokenResponse(tokenResponse);\n            const { access_token: access, refresh_token: refresh } = tokenResponse;\n            const expires = getExpiresFromTokenResponse(tokenResponse);\n            this.access = access;\n            this.expires = expires;\n            this.refresh = refresh;\n            return true;\n        } catch  {\n            clearTokensInStorage();\n            return false;\n        }\n    }\n    _sync() {\n        persistTokensInStorage(this);\n        fireAccessTokenChanged(this.access);\n    }\n    async _startRefreshTokensLoop(onFailedRefresh) {\n        while(true){\n            const expiresIn = this.expires - Date.now() - 1000;\n            await wait(Math.max(expiresIn, 1000));\n            if (this._revoked.signal.aborted) {\n                return;\n            }\n            if (!this._fetchNewAccessToken()) {\n                onFailedRefresh();\n                return;\n            }\n            this._sync();\n        }\n    }\n}\n/**\n * @internal\n */ function clearTokensInStorage() {\n    localStorage.removeItem(_constants_js__WEBPACK_IMPORTED_MODULE_0__.STORAGE_TOKENS_NAME);\n}\n/**\n * @internal\n */ function addAccessTokenChangedListener(listener) {\n    return accessTokenChangedListeners.listen(listener);\n}\nfunction readTokensFromStorage() {\n    const serializedTokens = localStorage.getItem(_constants_js__WEBPACK_IMPORTED_MODULE_0__.STORAGE_TOKENS_NAME);\n    if (!serializedTokens) {\n        return null;\n    }\n    try {\n        return JSON.parse(serializedTokens);\n    } catch  {\n        return null;\n    }\n}\nfunction persistTokensInStorage(tokens) {\n    localStorage.setItem(_constants_js__WEBPACK_IMPORTED_MODULE_0__.STORAGE_TOKENS_NAME, JSON.stringify(tokens));\n}\nfunction getExpiresFromTokenResponse({ created_at, expires_in }) {\n    return (created_at + expires_in) * 1000;\n}\nfunction assertTokenResponse(token) {\n    if (typeof token !== \"object\" || !token) {\n        throw new Error(\"Invalid Token Response\");\n    }\n    if (typeof token.access_token !== \"string\" || typeof token.refresh_token !== \"string\" || typeof token.created_at !== \"number\" || typeof token.expires_in !== \"number\") {\n        throw new Error(\"Invalid Token Response\");\n    }\n}\nfunction wait(ms) {\n    return new Promise((resolve)=>setTimeout(resolve, ms));\n}\nfunction fireAccessTokenChanged(accessToken) {\n    accessTokenChangedListeners.fireEvent(accessToken);\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/@webcontainer/api/dist/internal/tokens.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/@webcontainer/api/dist/preview-message-types.js":
/*!**********************************************************************!*\
  !*** ./node_modules/@webcontainer/api/dist/preview-message-types.js ***!
  \**********************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   PreviewMessageType: () => (/* binding */ PreviewMessageType)\n/* harmony export */ });\n/**\n * This type is in a separate module so that localservice can import it\n * without bundling all the other webcontainer specific stuff.\n */ var PreviewMessageType;\n(function(PreviewMessageType) {\n    PreviewMessageType[\"UncaughtException\"] = \"PREVIEW_UNCAUGHT_EXCEPTION\";\n    PreviewMessageType[\"UnhandledRejection\"] = \"PREVIEW_UNHANDLED_REJECTION\";\n    PreviewMessageType[\"ConsoleError\"] = \"PREVIEW_CONSOLE_ERROR\";\n})(PreviewMessageType || (PreviewMessageType = {}));\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvQHdlYmNvbnRhaW5lci9hcGkvZGlzdC9wcmV2aWV3LW1lc3NhZ2UtdHlwZXMuanMiLCJtYXBwaW5ncyI6Ijs7OztBQUFBOzs7Q0FHQyxHQUNNLElBQUlBLG1CQUFtQjtBQUM3QixVQUFVQSxrQkFBa0I7SUFDekJBLGtCQUFrQixDQUFDLG9CQUFvQixHQUFHO0lBQzFDQSxrQkFBa0IsQ0FBQyxxQkFBcUIsR0FBRztJQUMzQ0Esa0JBQWtCLENBQUMsZUFBZSxHQUFHO0FBQ3pDLEdBQUdBLHNCQUF1QkEsQ0FBQUEscUJBQXFCLENBQUMiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9haS1vcy1tdnAvLi9ub2RlX21vZHVsZXMvQHdlYmNvbnRhaW5lci9hcGkvZGlzdC9wcmV2aWV3LW1lc3NhZ2UtdHlwZXMuanM/NjNkMCJdLCJzb3VyY2VzQ29udGVudCI6WyIvKipcbiAqIFRoaXMgdHlwZSBpcyBpbiBhIHNlcGFyYXRlIG1vZHVsZSBzbyB0aGF0IGxvY2Fsc2VydmljZSBjYW4gaW1wb3J0IGl0XG4gKiB3aXRob3V0IGJ1bmRsaW5nIGFsbCB0aGUgb3RoZXIgd2ViY29udGFpbmVyIHNwZWNpZmljIHN0dWZmLlxuICovXG5leHBvcnQgdmFyIFByZXZpZXdNZXNzYWdlVHlwZTtcbihmdW5jdGlvbiAoUHJldmlld01lc3NhZ2VUeXBlKSB7XG4gICAgUHJldmlld01lc3NhZ2VUeXBlW1wiVW5jYXVnaHRFeGNlcHRpb25cIl0gPSBcIlBSRVZJRVdfVU5DQVVHSFRfRVhDRVBUSU9OXCI7XG4gICAgUHJldmlld01lc3NhZ2VUeXBlW1wiVW5oYW5kbGVkUmVqZWN0aW9uXCJdID0gXCJQUkVWSUVXX1VOSEFORExFRF9SRUpFQ1RJT05cIjtcbiAgICBQcmV2aWV3TWVzc2FnZVR5cGVbXCJDb25zb2xlRXJyb3JcIl0gPSBcIlBSRVZJRVdfQ09OU09MRV9FUlJPUlwiO1xufSkoUHJldmlld01lc3NhZ2VUeXBlIHx8IChQcmV2aWV3TWVzc2FnZVR5cGUgPSB7fSkpO1xuIl0sIm5hbWVzIjpbIlByZXZpZXdNZXNzYWdlVHlwZSJdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/@webcontainer/api/dist/preview-message-types.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/@webcontainer/api/dist/utils.js":
/*!******************************************************!*\
  !*** ./node_modules/@webcontainer/api/dist/utils.js ***!
  \******************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   PreviewMessageType: () => (/* reexport safe */ _preview_message_types_js__WEBPACK_IMPORTED_MODULE_1__.PreviewMessageType),\n/* harmony export */   isPreviewMessage: () => (/* reexport safe */ _utils_is_preview_message_js__WEBPACK_IMPORTED_MODULE_2__.isPreviewMessage),\n/* harmony export */   reloadPreview: () => (/* reexport safe */ _utils_reload_preview_js__WEBPACK_IMPORTED_MODULE_0__.reloadPreview)\n/* harmony export */ });\n/* harmony import */ var _utils_reload_preview_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./utils/reload-preview.js */ \"(ssr)/./node_modules/@webcontainer/api/dist/utils/reload-preview.js\");\n/* harmony import */ var _preview_message_types_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./preview-message-types.js */ \"(ssr)/./node_modules/@webcontainer/api/dist/preview-message-types.js\");\n/* harmony import */ var _utils_is_preview_message_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./utils/is-preview-message.js */ \"(ssr)/./node_modules/@webcontainer/api/dist/utils/is-preview-message.js\");\n\n\n\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvQHdlYmNvbnRhaW5lci9hcGkvZGlzdC91dGlscy5qcyIsIm1hcHBpbmdzIjoiOzs7Ozs7Ozs7QUFBMEQ7QUFDTTtBQUNDIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vYWktb3MtbXZwLy4vbm9kZV9tb2R1bGVzL0B3ZWJjb250YWluZXIvYXBpL2Rpc3QvdXRpbHMuanM/ODNiOSJdLCJzb3VyY2VzQ29udGVudCI6WyJleHBvcnQgeyByZWxvYWRQcmV2aWV3IH0gZnJvbSAnLi91dGlscy9yZWxvYWQtcHJldmlldy5qcyc7XG5leHBvcnQgeyBQcmV2aWV3TWVzc2FnZVR5cGUgfSBmcm9tICcuL3ByZXZpZXctbWVzc2FnZS10eXBlcy5qcyc7XG5leHBvcnQgeyBpc1ByZXZpZXdNZXNzYWdlIH0gZnJvbSAnLi91dGlscy9pcy1wcmV2aWV3LW1lc3NhZ2UuanMnO1xuIl0sIm5hbWVzIjpbInJlbG9hZFByZXZpZXciLCJQcmV2aWV3TWVzc2FnZVR5cGUiLCJpc1ByZXZpZXdNZXNzYWdlIl0sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/@webcontainer/api/dist/utils.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/@webcontainer/api/dist/utils/file-system.js":
/*!******************************************************************!*\
  !*** ./node_modules/@webcontainer/api/dist/utils/file-system.js ***!
  \******************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   toExternalFileSystemTree: () => (/* binding */ toExternalFileSystemTree),\n/* harmony export */   toInternalFileSystemTree: () => (/* binding */ toInternalFileSystemTree)\n/* harmony export */ });\n/* harmony import */ var _null_prototype_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./null-prototype.js */ \"(ssr)/./node_modules/@webcontainer/api/dist/utils/null-prototype.js\");\n\nconst binaryDecoder = new TextDecoder(\"latin1\");\n/**\n * @internal\n */ function toInternalFileSystemTree(tree) {\n    const newTree = {\n        d: {}\n    };\n    for (const name of Object.keys(tree)){\n        const entry = tree[name];\n        if (\"file\" in entry) {\n            if (\"symlink\" in entry.file) {\n                newTree.d[name] = {\n                    f: {\n                        l: entry.file.symlink\n                    }\n                };\n                continue;\n            }\n            const contents = entry.file.contents;\n            const stringContents = typeof contents === \"string\" ? contents : binaryDecoder.decode(contents);\n            const binary = typeof contents === \"string\" ? {} : {\n                b: true\n            };\n            newTree.d[name] = {\n                f: {\n                    c: stringContents,\n                    ...binary\n                }\n            };\n            continue;\n        }\n        const newEntry = toInternalFileSystemTree(entry.directory);\n        newTree.d[name] = newEntry;\n    }\n    return newTree;\n}\n/**\n * @internal\n */ function toExternalFileSystemTree(tree) {\n    const newTree = (0,_null_prototype_js__WEBPACK_IMPORTED_MODULE_0__.nullPrototype)();\n    if (\"f\" in tree) {\n        throw new Error(\"It is not possible to export a single file in the JSON format.\");\n    }\n    if (\"d\" in tree) {\n        for (const name of Object.keys(tree.d)){\n            const entry = tree.d[name];\n            if (\"d\" in entry) {\n                newTree[name] = (0,_null_prototype_js__WEBPACK_IMPORTED_MODULE_0__.nullPrototype)({\n                    directory: toExternalFileSystemTree(entry)\n                });\n            } else if (\"f\" in entry) {\n                if (\"c\" in entry.f) {\n                    newTree[name] = (0,_null_prototype_js__WEBPACK_IMPORTED_MODULE_0__.nullPrototype)({\n                        file: (0,_null_prototype_js__WEBPACK_IMPORTED_MODULE_0__.nullPrototype)({\n                            contents: entry.f.b ? fromBinaryString(entry.f.c) : entry.f.c\n                        })\n                    });\n                } else if (\"l\" in entry.f) {\n                    newTree[name] = (0,_null_prototype_js__WEBPACK_IMPORTED_MODULE_0__.nullPrototype)({\n                        file: (0,_null_prototype_js__WEBPACK_IMPORTED_MODULE_0__.nullPrototype)({\n                            symlink: entry.f.l\n                        })\n                    });\n                }\n            }\n        }\n    }\n    return newTree;\n}\nfunction fromBinaryString(s) {\n    const encoded = new Uint8Array(s.length);\n    for(let i = 0; i < s.length; i++){\n        encoded[i] = s[i].charCodeAt(0);\n    }\n    return encoded;\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvQHdlYmNvbnRhaW5lci9hcGkvZGlzdC91dGlscy9maWxlLXN5c3RlbS5qcyIsIm1hcHBpbmdzIjoiOzs7Ozs7QUFBb0Q7QUFDcEQsTUFBTUMsZ0JBQWdCLElBQUlDLFlBQVk7QUFDdEM7O0NBRUMsR0FDTSxTQUFTQyx5QkFBeUJDLElBQUk7SUFDekMsTUFBTUMsVUFBVTtRQUFFQyxHQUFHLENBQUM7SUFBRTtJQUN4QixLQUFLLE1BQU1DLFFBQVFDLE9BQU9DLElBQUksQ0FBQ0wsTUFBTztRQUNsQyxNQUFNTSxRQUFRTixJQUFJLENBQUNHLEtBQUs7UUFDeEIsSUFBSSxVQUFVRyxPQUFPO1lBQ2pCLElBQUksYUFBYUEsTUFBTUMsSUFBSSxFQUFFO2dCQUN6Qk4sUUFBUUMsQ0FBQyxDQUFDQyxLQUFLLEdBQUc7b0JBQUVLLEdBQUc7d0JBQUVDLEdBQUdILE1BQU1DLElBQUksQ0FBQ0csT0FBTztvQkFBQztnQkFBRTtnQkFDakQ7WUFDSjtZQUNBLE1BQU1DLFdBQVdMLE1BQU1DLElBQUksQ0FBQ0ksUUFBUTtZQUNwQyxNQUFNQyxpQkFBaUIsT0FBT0QsYUFBYSxXQUFXQSxXQUFXZCxjQUFjZ0IsTUFBTSxDQUFDRjtZQUN0RixNQUFNRyxTQUFTLE9BQU9ILGFBQWEsV0FBVyxDQUFDLElBQUk7Z0JBQUVJLEdBQUc7WUFBSztZQUM3RGQsUUFBUUMsQ0FBQyxDQUFDQyxLQUFLLEdBQUc7Z0JBQUVLLEdBQUc7b0JBQUVRLEdBQUdKO29CQUFnQixHQUFHRSxNQUFNO2dCQUFDO1lBQUU7WUFDeEQ7UUFDSjtRQUNBLE1BQU1HLFdBQVdsQix5QkFBeUJPLE1BQU1ZLFNBQVM7UUFDekRqQixRQUFRQyxDQUFDLENBQUNDLEtBQUssR0FBR2M7SUFDdEI7SUFDQSxPQUFPaEI7QUFDWDtBQUNBOztDQUVDLEdBQ00sU0FBU2tCLHlCQUF5Qm5CLElBQUk7SUFDekMsTUFBTUMsVUFBVUwsaUVBQWFBO0lBQzdCLElBQUksT0FBT0ksTUFBTTtRQUNiLE1BQU0sSUFBSW9CLE1BQU07SUFDcEI7SUFDQSxJQUFJLE9BQU9wQixNQUFNO1FBQ2IsS0FBSyxNQUFNRyxRQUFRQyxPQUFPQyxJQUFJLENBQUNMLEtBQUtFLENBQUMsRUFBRztZQUNwQyxNQUFNSSxRQUFRTixLQUFLRSxDQUFDLENBQUNDLEtBQUs7WUFDMUIsSUFBSSxPQUFPRyxPQUFPO2dCQUNkTCxPQUFPLENBQUNFLEtBQUssR0FBR1AsaUVBQWFBLENBQUM7b0JBQzFCc0IsV0FBV0MseUJBQXlCYjtnQkFDeEM7WUFDSixPQUNLLElBQUksT0FBT0EsT0FBTztnQkFDbkIsSUFBSSxPQUFPQSxNQUFNRSxDQUFDLEVBQUU7b0JBQ2hCUCxPQUFPLENBQUNFLEtBQUssR0FBR1AsaUVBQWFBLENBQUM7d0JBQzFCVyxNQUFNWCxpRUFBYUEsQ0FBQzs0QkFDaEJlLFVBQVVMLE1BQU1FLENBQUMsQ0FBQ08sQ0FBQyxHQUFHTSxpQkFBaUJmLE1BQU1FLENBQUMsQ0FBQ1EsQ0FBQyxJQUFJVixNQUFNRSxDQUFDLENBQUNRLENBQUM7d0JBQ2pFO29CQUNKO2dCQUNKLE9BQ0ssSUFBSSxPQUFPVixNQUFNRSxDQUFDLEVBQUU7b0JBQ3JCUCxPQUFPLENBQUNFLEtBQUssR0FBR1AsaUVBQWFBLENBQUM7d0JBQzFCVyxNQUFNWCxpRUFBYUEsQ0FBQzs0QkFDaEJjLFNBQVNKLE1BQU1FLENBQUMsQ0FBQ0MsQ0FBQzt3QkFDdEI7b0JBQ0o7Z0JBQ0o7WUFDSjtRQUNKO0lBQ0o7SUFDQSxPQUFPUjtBQUNYO0FBQ0EsU0FBU29CLGlCQUFpQkMsQ0FBQztJQUN2QixNQUFNQyxVQUFVLElBQUlDLFdBQVdGLEVBQUVHLE1BQU07SUFDdkMsSUFBSyxJQUFJQyxJQUFJLEdBQUdBLElBQUlKLEVBQUVHLE1BQU0sRUFBRUMsSUFBSztRQUMvQkgsT0FBTyxDQUFDRyxFQUFFLEdBQUdKLENBQUMsQ0FBQ0ksRUFBRSxDQUFDQyxVQUFVLENBQUM7SUFDakM7SUFDQSxPQUFPSjtBQUNYIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vYWktb3MtbXZwLy4vbm9kZV9tb2R1bGVzL0B3ZWJjb250YWluZXIvYXBpL2Rpc3QvdXRpbHMvZmlsZS1zeXN0ZW0uanM/MWM2MCJdLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgeyBudWxsUHJvdG90eXBlIH0gZnJvbSAnLi9udWxsLXByb3RvdHlwZS5qcyc7XG5jb25zdCBiaW5hcnlEZWNvZGVyID0gbmV3IFRleHREZWNvZGVyKCdsYXRpbjEnKTtcbi8qKlxuICogQGludGVybmFsXG4gKi9cbmV4cG9ydCBmdW5jdGlvbiB0b0ludGVybmFsRmlsZVN5c3RlbVRyZWUodHJlZSkge1xuICAgIGNvbnN0IG5ld1RyZWUgPSB7IGQ6IHt9IH07XG4gICAgZm9yIChjb25zdCBuYW1lIG9mIE9iamVjdC5rZXlzKHRyZWUpKSB7XG4gICAgICAgIGNvbnN0IGVudHJ5ID0gdHJlZVtuYW1lXTtcbiAgICAgICAgaWYgKCdmaWxlJyBpbiBlbnRyeSkge1xuICAgICAgICAgICAgaWYgKCdzeW1saW5rJyBpbiBlbnRyeS5maWxlKSB7XG4gICAgICAgICAgICAgICAgbmV3VHJlZS5kW25hbWVdID0geyBmOiB7IGw6IGVudHJ5LmZpbGUuc3ltbGluayB9IH07XG4gICAgICAgICAgICAgICAgY29udGludWU7XG4gICAgICAgICAgICB9XG4gICAgICAgICAgICBjb25zdCBjb250ZW50cyA9IGVudHJ5LmZpbGUuY29udGVudHM7XG4gICAgICAgICAgICBjb25zdCBzdHJpbmdDb250ZW50cyA9IHR5cGVvZiBjb250ZW50cyA9PT0gJ3N0cmluZycgPyBjb250ZW50cyA6IGJpbmFyeURlY29kZXIuZGVjb2RlKGNvbnRlbnRzKTtcbiAgICAgICAgICAgIGNvbnN0IGJpbmFyeSA9IHR5cGVvZiBjb250ZW50cyA9PT0gJ3N0cmluZycgPyB7fSA6IHsgYjogdHJ1ZSB9O1xuICAgICAgICAgICAgbmV3VHJlZS5kW25hbWVdID0geyBmOiB7IGM6IHN0cmluZ0NvbnRlbnRzLCAuLi5iaW5hcnkgfSB9O1xuICAgICAgICAgICAgY29udGludWU7XG4gICAgICAgIH1cbiAgICAgICAgY29uc3QgbmV3RW50cnkgPSB0b0ludGVybmFsRmlsZVN5c3RlbVRyZWUoZW50cnkuZGlyZWN0b3J5KTtcbiAgICAgICAgbmV3VHJlZS5kW25hbWVdID0gbmV3RW50cnk7XG4gICAgfVxuICAgIHJldHVybiBuZXdUcmVlO1xufVxuLyoqXG4gKiBAaW50ZXJuYWxcbiAqL1xuZXhwb3J0IGZ1bmN0aW9uIHRvRXh0ZXJuYWxGaWxlU3lzdGVtVHJlZSh0cmVlKSB7XG4gICAgY29uc3QgbmV3VHJlZSA9IG51bGxQcm90b3R5cGUoKTtcbiAgICBpZiAoJ2YnIGluIHRyZWUpIHtcbiAgICAgICAgdGhyb3cgbmV3IEVycm9yKCdJdCBpcyBub3QgcG9zc2libGUgdG8gZXhwb3J0IGEgc2luZ2xlIGZpbGUgaW4gdGhlIEpTT04gZm9ybWF0LicpO1xuICAgIH1cbiAgICBpZiAoJ2QnIGluIHRyZWUpIHtcbiAgICAgICAgZm9yIChjb25zdCBuYW1lIG9mIE9iamVjdC5rZXlzKHRyZWUuZCkpIHtcbiAgICAgICAgICAgIGNvbnN0IGVudHJ5ID0gdHJlZS5kW25hbWVdO1xuICAgICAgICAgICAgaWYgKCdkJyBpbiBlbnRyeSkge1xuICAgICAgICAgICAgICAgIG5ld1RyZWVbbmFtZV0gPSBudWxsUHJvdG90eXBlKHtcbiAgICAgICAgICAgICAgICAgICAgZGlyZWN0b3J5OiB0b0V4dGVybmFsRmlsZVN5c3RlbVRyZWUoZW50cnkpLFxuICAgICAgICAgICAgICAgIH0pO1xuICAgICAgICAgICAgfVxuICAgICAgICAgICAgZWxzZSBpZiAoJ2YnIGluIGVudHJ5KSB7XG4gICAgICAgICAgICAgICAgaWYgKCdjJyBpbiBlbnRyeS5mKSB7XG4gICAgICAgICAgICAgICAgICAgIG5ld1RyZWVbbmFtZV0gPSBudWxsUHJvdG90eXBlKHtcbiAgICAgICAgICAgICAgICAgICAgICAgIGZpbGU6IG51bGxQcm90b3R5cGUoe1xuICAgICAgICAgICAgICAgICAgICAgICAgICAgIGNvbnRlbnRzOiBlbnRyeS5mLmIgPyBmcm9tQmluYXJ5U3RyaW5nKGVudHJ5LmYuYykgOiBlbnRyeS5mLmMsXG4gICAgICAgICAgICAgICAgICAgICAgICB9KSxcbiAgICAgICAgICAgICAgICAgICAgfSk7XG4gICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgICAgIGVsc2UgaWYgKCdsJyBpbiBlbnRyeS5mKSB7XG4gICAgICAgICAgICAgICAgICAgIG5ld1RyZWVbbmFtZV0gPSBudWxsUHJvdG90eXBlKHtcbiAgICAgICAgICAgICAgICAgICAgICAgIGZpbGU6IG51bGxQcm90b3R5cGUoe1xuICAgICAgICAgICAgICAgICAgICAgICAgICAgIHN5bWxpbms6IGVudHJ5LmYubCxcbiAgICAgICAgICAgICAgICAgICAgICAgIH0pLFxuICAgICAgICAgICAgICAgICAgICB9KTtcbiAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICB9XG4gICAgICAgIH1cbiAgICB9XG4gICAgcmV0dXJuIG5ld1RyZWU7XG59XG5mdW5jdGlvbiBmcm9tQmluYXJ5U3RyaW5nKHMpIHtcbiAgICBjb25zdCBlbmNvZGVkID0gbmV3IFVpbnQ4QXJyYXkocy5sZW5ndGgpO1xuICAgIGZvciAobGV0IGkgPSAwOyBpIDwgcy5sZW5ndGg7IGkrKykge1xuICAgICAgICBlbmNvZGVkW2ldID0gc1tpXS5jaGFyQ29kZUF0KDApO1xuICAgIH1cbiAgICByZXR1cm4gZW5jb2RlZDtcbn1cbiJdLCJuYW1lcyI6WyJudWxsUHJvdG90eXBlIiwiYmluYXJ5RGVjb2RlciIsIlRleHREZWNvZGVyIiwidG9JbnRlcm5hbEZpbGVTeXN0ZW1UcmVlIiwidHJlZSIsIm5ld1RyZWUiLCJkIiwibmFtZSIsIk9iamVjdCIsImtleXMiLCJlbnRyeSIsImZpbGUiLCJmIiwibCIsInN5bWxpbmsiLCJjb250ZW50cyIsInN0cmluZ0NvbnRlbnRzIiwiZGVjb2RlIiwiYmluYXJ5IiwiYiIsImMiLCJuZXdFbnRyeSIsImRpcmVjdG9yeSIsInRvRXh0ZXJuYWxGaWxlU3lzdGVtVHJlZSIsIkVycm9yIiwiZnJvbUJpbmFyeVN0cmluZyIsInMiLCJlbmNvZGVkIiwiVWludDhBcnJheSIsImxlbmd0aCIsImkiLCJjaGFyQ29kZUF0Il0sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/@webcontainer/api/dist/utils/file-system.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/@webcontainer/api/dist/utils/is-preview-message.js":
/*!*************************************************************************!*\
  !*** ./node_modules/@webcontainer/api/dist/utils/is-preview-message.js ***!
  \*************************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   isPreviewMessage: () => (/* binding */ isPreviewMessage)\n/* harmony export */ });\n/* harmony import */ var _preview_message_types_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../preview-message-types.js */ \"(ssr)/./node_modules/@webcontainer/api/dist/preview-message-types.js\");\n\nconst PREVIEW_MESSAGE_TYPES = [\n    _preview_message_types_js__WEBPACK_IMPORTED_MODULE_0__.PreviewMessageType.ConsoleError,\n    _preview_message_types_js__WEBPACK_IMPORTED_MODULE_0__.PreviewMessageType.UncaughtException,\n    _preview_message_types_js__WEBPACK_IMPORTED_MODULE_0__.PreviewMessageType.UnhandledRejection\n];\nfunction isPreviewMessage(data) {\n    if (data == null || typeof data !== \"object\") {\n        return false;\n    }\n    if (!(\"type\" in data) || !PREVIEW_MESSAGE_TYPES.includes(data.type)) {\n        return false;\n    }\n    return true;\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvQHdlYmNvbnRhaW5lci9hcGkvZGlzdC91dGlscy9pcy1wcmV2aWV3LW1lc3NhZ2UuanMiLCJtYXBwaW5ncyI6Ijs7Ozs7QUFBaUU7QUFDakUsTUFBTUMsd0JBQXdCO0lBQzFCRCx5RUFBa0JBLENBQUNFLFlBQVk7SUFDL0JGLHlFQUFrQkEsQ0FBQ0csaUJBQWlCO0lBQ3BDSCx5RUFBa0JBLENBQUNJLGtCQUFrQjtDQUN4QztBQUNNLFNBQVNDLGlCQUFpQkMsSUFBSTtJQUNqQyxJQUFJQSxRQUFRLFFBQVEsT0FBT0EsU0FBUyxVQUFVO1FBQzFDLE9BQU87SUFDWDtJQUNBLElBQUksQ0FBRSxXQUFVQSxJQUFHLEtBQU0sQ0FBQ0wsc0JBQXNCTSxRQUFRLENBQUNELEtBQUtFLElBQUksR0FBRztRQUNqRSxPQUFPO0lBQ1g7SUFDQSxPQUFPO0FBQ1giLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9haS1vcy1tdnAvLi9ub2RlX21vZHVsZXMvQHdlYmNvbnRhaW5lci9hcGkvZGlzdC91dGlscy9pcy1wcmV2aWV3LW1lc3NhZ2UuanM/YzY5MCJdLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgeyBQcmV2aWV3TWVzc2FnZVR5cGUgfSBmcm9tICcuLi9wcmV2aWV3LW1lc3NhZ2UtdHlwZXMuanMnO1xuY29uc3QgUFJFVklFV19NRVNTQUdFX1RZUEVTID0gW1xuICAgIFByZXZpZXdNZXNzYWdlVHlwZS5Db25zb2xlRXJyb3IsXG4gICAgUHJldmlld01lc3NhZ2VUeXBlLlVuY2F1Z2h0RXhjZXB0aW9uLFxuICAgIFByZXZpZXdNZXNzYWdlVHlwZS5VbmhhbmRsZWRSZWplY3Rpb24sXG5dO1xuZXhwb3J0IGZ1bmN0aW9uIGlzUHJldmlld01lc3NhZ2UoZGF0YSkge1xuICAgIGlmIChkYXRhID09IG51bGwgfHwgdHlwZW9mIGRhdGEgIT09ICdvYmplY3QnKSB7XG4gICAgICAgIHJldHVybiBmYWxzZTtcbiAgICB9XG4gICAgaWYgKCEoJ3R5cGUnIGluIGRhdGEpIHx8ICFQUkVWSUVXX01FU1NBR0VfVFlQRVMuaW5jbHVkZXMoZGF0YS50eXBlKSkge1xuICAgICAgICByZXR1cm4gZmFsc2U7XG4gICAgfVxuICAgIHJldHVybiB0cnVlO1xufVxuIl0sIm5hbWVzIjpbIlByZXZpZXdNZXNzYWdlVHlwZSIsIlBSRVZJRVdfTUVTU0FHRV9UWVBFUyIsIkNvbnNvbGVFcnJvciIsIlVuY2F1Z2h0RXhjZXB0aW9uIiwiVW5oYW5kbGVkUmVqZWN0aW9uIiwiaXNQcmV2aWV3TWVzc2FnZSIsImRhdGEiLCJpbmNsdWRlcyIsInR5cGUiXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/@webcontainer/api/dist/utils/is-preview-message.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/@webcontainer/api/dist/utils/null-prototype.js":
/*!*********************************************************************!*\
  !*** ./node_modules/@webcontainer/api/dist/utils/null-prototype.js ***!
  \*********************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   nullPrototype: () => (/* binding */ nullPrototype)\n/* harmony export */ });\n/**\n * @internal\n */ function nullPrototype(source) {\n    const prototype = Object.create(null);\n    if (!source) {\n        return prototype;\n    }\n    return Object.assign(prototype, source);\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvQHdlYmNvbnRhaW5lci9hcGkvZGlzdC91dGlscy9udWxsLXByb3RvdHlwZS5qcyIsIm1hcHBpbmdzIjoiOzs7O0FBQUE7O0NBRUMsR0FDTSxTQUFTQSxjQUFjQyxNQUFNO0lBQ2hDLE1BQU1DLFlBQVlDLE9BQU9DLE1BQU0sQ0FBQztJQUNoQyxJQUFJLENBQUNILFFBQVE7UUFDVCxPQUFPQztJQUNYO0lBQ0EsT0FBT0MsT0FBT0UsTUFBTSxDQUFDSCxXQUFXRDtBQUNwQyIsInNvdXJjZXMiOlsid2VicGFjazovL2FpLW9zLW12cC8uL25vZGVfbW9kdWxlcy9Ad2ViY29udGFpbmVyL2FwaS9kaXN0L3V0aWxzL251bGwtcHJvdG90eXBlLmpzP2IzNDUiXSwic291cmNlc0NvbnRlbnQiOlsiLyoqXG4gKiBAaW50ZXJuYWxcbiAqL1xuZXhwb3J0IGZ1bmN0aW9uIG51bGxQcm90b3R5cGUoc291cmNlKSB7XG4gICAgY29uc3QgcHJvdG90eXBlID0gT2JqZWN0LmNyZWF0ZShudWxsKTtcbiAgICBpZiAoIXNvdXJjZSkge1xuICAgICAgICByZXR1cm4gcHJvdG90eXBlO1xuICAgIH1cbiAgICByZXR1cm4gT2JqZWN0LmFzc2lnbihwcm90b3R5cGUsIHNvdXJjZSk7XG59XG4iXSwibmFtZXMiOlsibnVsbFByb3RvdHlwZSIsInNvdXJjZSIsInByb3RvdHlwZSIsIk9iamVjdCIsImNyZWF0ZSIsImFzc2lnbiJdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/@webcontainer/api/dist/utils/null-prototype.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/@webcontainer/api/dist/utils/reload-preview.js":
/*!*********************************************************************!*\
  !*** ./node_modules/@webcontainer/api/dist/utils/reload-preview.js ***!
  \*********************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   reloadPreview: () => (/* binding */ reloadPreview)\n/* harmony export */ });\n/**\n * This function reloads the provided iframe.\n *\n * @param preview The iframe page to reload.\n * @param hardRefreshTimeout The timeout after which the preview is reset if it hasn't responded to the reload event.\n */ function reloadPreview(preview, hardRefreshTimeout = 200) {\n    const { port1, port2 } = new MessageChannel();\n    let resolve;\n    const promise = new Promise((_resolve)=>{\n        resolve = _resolve;\n    });\n    const done = ()=>{\n        resolve();\n        port2.close();\n    };\n    const timeout = setTimeout(()=>{\n        const iframeSrc = preview.src;\n        preview.src = iframeSrc;\n        done();\n    }, hardRefreshTimeout);\n    port2.addEventListener(\"message\", (event)=>{\n        const data = event.data;\n        if (data == null || typeof data !== \"object\") {\n            return;\n        }\n        if (data.type === \"LOCALSERVICE_WINDOW_RELOADED\") {\n            clearTimeout(timeout);\n            done();\n        }\n    });\n    preview.contentWindow?.postMessage({\n        type: \"LOCALSERVICE_RELOAD_WINDOW\",\n        callback: port1\n    }, \"*\", [\n        port1\n    ]);\n    return promise;\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvQHdlYmNvbnRhaW5lci9hcGkvZGlzdC91dGlscy9yZWxvYWQtcHJldmlldy5qcyIsIm1hcHBpbmdzIjoiOzs7O0FBQUE7Ozs7O0NBS0MsR0FDTSxTQUFTQSxjQUFjQyxPQUFPLEVBQUVDLHFCQUFxQixHQUFHO0lBQzNELE1BQU0sRUFBRUMsS0FBSyxFQUFFQyxLQUFLLEVBQUUsR0FBRyxJQUFJQztJQUM3QixJQUFJQztJQUNKLE1BQU1DLFVBQVUsSUFBSUMsUUFBUSxDQUFDQztRQUN6QkgsVUFBVUc7SUFDZDtJQUNBLE1BQU1DLE9BQU87UUFDVEo7UUFDQUYsTUFBTU8sS0FBSztJQUNmO0lBQ0EsTUFBTUMsVUFBVUMsV0FBVztRQUN2QixNQUFNQyxZQUFZYixRQUFRYyxHQUFHO1FBQzdCZCxRQUFRYyxHQUFHLEdBQUdEO1FBQ2RKO0lBQ0osR0FBR1I7SUFDSEUsTUFBTVksZ0JBQWdCLENBQUMsV0FBVyxDQUFDQztRQUMvQixNQUFNQyxPQUFPRCxNQUFNQyxJQUFJO1FBQ3ZCLElBQUlBLFFBQVEsUUFBUSxPQUFPQSxTQUFTLFVBQVU7WUFDMUM7UUFDSjtRQUNBLElBQUlBLEtBQUtDLElBQUksS0FBSyxnQ0FBZ0M7WUFDOUNDLGFBQWFSO1lBQ2JGO1FBQ0o7SUFDSjtJQUNBVCxRQUFRb0IsYUFBYSxFQUFFQyxZQUFZO1FBQy9CSCxNQUFNO1FBQ05JLFVBQVVwQjtJQUNkLEdBQUcsS0FBSztRQUFDQTtLQUFNO0lBQ2YsT0FBT0k7QUFDWCIsInNvdXJjZXMiOlsid2VicGFjazovL2FpLW9zLW12cC8uL25vZGVfbW9kdWxlcy9Ad2ViY29udGFpbmVyL2FwaS9kaXN0L3V0aWxzL3JlbG9hZC1wcmV2aWV3LmpzPzhmNjEiXSwic291cmNlc0NvbnRlbnQiOlsiLyoqXG4gKiBUaGlzIGZ1bmN0aW9uIHJlbG9hZHMgdGhlIHByb3ZpZGVkIGlmcmFtZS5cbiAqXG4gKiBAcGFyYW0gcHJldmlldyBUaGUgaWZyYW1lIHBhZ2UgdG8gcmVsb2FkLlxuICogQHBhcmFtIGhhcmRSZWZyZXNoVGltZW91dCBUaGUgdGltZW91dCBhZnRlciB3aGljaCB0aGUgcHJldmlldyBpcyByZXNldCBpZiBpdCBoYXNuJ3QgcmVzcG9uZGVkIHRvIHRoZSByZWxvYWQgZXZlbnQuXG4gKi9cbmV4cG9ydCBmdW5jdGlvbiByZWxvYWRQcmV2aWV3KHByZXZpZXcsIGhhcmRSZWZyZXNoVGltZW91dCA9IDIwMCkge1xuICAgIGNvbnN0IHsgcG9ydDEsIHBvcnQyIH0gPSBuZXcgTWVzc2FnZUNoYW5uZWwoKTtcbiAgICBsZXQgcmVzb2x2ZTtcbiAgICBjb25zdCBwcm9taXNlID0gbmV3IFByb21pc2UoKF9yZXNvbHZlKSA9PiB7XG4gICAgICAgIHJlc29sdmUgPSBfcmVzb2x2ZTtcbiAgICB9KTtcbiAgICBjb25zdCBkb25lID0gKCkgPT4ge1xuICAgICAgICByZXNvbHZlKCk7XG4gICAgICAgIHBvcnQyLmNsb3NlKCk7XG4gICAgfTtcbiAgICBjb25zdCB0aW1lb3V0ID0gc2V0VGltZW91dCgoKSA9PiB7XG4gICAgICAgIGNvbnN0IGlmcmFtZVNyYyA9IHByZXZpZXcuc3JjO1xuICAgICAgICBwcmV2aWV3LnNyYyA9IGlmcmFtZVNyYztcbiAgICAgICAgZG9uZSgpO1xuICAgIH0sIGhhcmRSZWZyZXNoVGltZW91dCk7XG4gICAgcG9ydDIuYWRkRXZlbnRMaXN0ZW5lcignbWVzc2FnZScsIChldmVudCkgPT4ge1xuICAgICAgICBjb25zdCBkYXRhID0gZXZlbnQuZGF0YTtcbiAgICAgICAgaWYgKGRhdGEgPT0gbnVsbCB8fCB0eXBlb2YgZGF0YSAhPT0gJ29iamVjdCcpIHtcbiAgICAgICAgICAgIHJldHVybjtcbiAgICAgICAgfVxuICAgICAgICBpZiAoZGF0YS50eXBlID09PSAnTE9DQUxTRVJWSUNFX1dJTkRPV19SRUxPQURFRCcpIHtcbiAgICAgICAgICAgIGNsZWFyVGltZW91dCh0aW1lb3V0KTtcbiAgICAgICAgICAgIGRvbmUoKTtcbiAgICAgICAgfVxuICAgIH0pO1xuICAgIHByZXZpZXcuY29udGVudFdpbmRvdz8ucG9zdE1lc3NhZ2Uoe1xuICAgICAgICB0eXBlOiAnTE9DQUxTRVJWSUNFX1JFTE9BRF9XSU5ET1cnLFxuICAgICAgICBjYWxsYmFjazogcG9ydDEsXG4gICAgfSwgJyonLCBbcG9ydDFdKTtcbiAgICByZXR1cm4gcHJvbWlzZTtcbn1cbiJdLCJuYW1lcyI6WyJyZWxvYWRQcmV2aWV3IiwicHJldmlldyIsImhhcmRSZWZyZXNoVGltZW91dCIsInBvcnQxIiwicG9ydDIiLCJNZXNzYWdlQ2hhbm5lbCIsInJlc29sdmUiLCJwcm9taXNlIiwiUHJvbWlzZSIsIl9yZXNvbHZlIiwiZG9uZSIsImNsb3NlIiwidGltZW91dCIsInNldFRpbWVvdXQiLCJpZnJhbWVTcmMiLCJzcmMiLCJhZGRFdmVudExpc3RlbmVyIiwiZXZlbnQiLCJkYXRhIiwidHlwZSIsImNsZWFyVGltZW91dCIsImNvbnRlbnRXaW5kb3ciLCJwb3N0TWVzc2FnZSIsImNhbGxiYWNrIl0sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/@webcontainer/api/dist/utils/reload-preview.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/@webcontainer/api/dist/vendor/index.js":
/*!*************************************************************!*\
  !*** ./node_modules/@webcontainer/api/dist/vendor/index.js ***!
  \*************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   Comlink: () => (/* binding */ comlink_exports)\n/* harmony export */ });\nvar __defProp = Object.defineProperty;\nvar __export = (target, all)=>{\n    for(var name in all)__defProp(target, name, {\n        get: all[name],\n        enumerable: true\n    });\n};\n// dist/vendor/comlink.js\nvar comlink_exports = {};\n__export(comlink_exports, {\n    createEndpoint: ()=>createEndpoint,\n    expose: ()=>expose,\n    proxy: ()=>proxy,\n    proxyMarker: ()=>proxyMarker,\n    releaseProxy: ()=>releaseProxy,\n    transfer: ()=>transfer,\n    transferHandlers: ()=>transferHandlers,\n    windowEndpoint: ()=>windowEndpoint,\n    wrap: ()=>wrap\n});\n// ../../node_modules/comlink/dist/esm/comlink.mjs\nvar proxyMarker = Symbol(\"Comlink.proxy\");\nvar createEndpoint = Symbol(\"Comlink.endpoint\");\nvar releaseProxy = Symbol(\"Comlink.releaseProxy\");\nvar throwMarker = Symbol(\"Comlink.thrown\");\nvar isObject = (val)=>typeof val === \"object\" && val !== null || typeof val === \"function\";\nvar proxyTransferHandler = {\n    canHandle: (val)=>isObject(val) && val[proxyMarker],\n    serialize (obj) {\n        const { port1, port2 } = new MessageChannel();\n        expose(obj, port1);\n        return [\n            port2,\n            [\n                port2\n            ]\n        ];\n    },\n    deserialize (port) {\n        port.start();\n        return wrap(port);\n    }\n};\nvar throwTransferHandler = {\n    canHandle: (value)=>isObject(value) && throwMarker in value,\n    serialize ({ value }) {\n        let serialized;\n        if (value instanceof Error) {\n            serialized = {\n                isError: true,\n                value: {\n                    message: value.message,\n                    name: value.name,\n                    stack: value.stack\n                }\n            };\n        } else {\n            serialized = {\n                isError: false,\n                value\n            };\n        }\n        return [\n            serialized,\n            []\n        ];\n    },\n    deserialize (serialized) {\n        if (serialized.isError) {\n            throw Object.assign(new Error(serialized.value.message), serialized.value);\n        }\n        throw serialized.value;\n    }\n};\nvar transferHandlers = /* @__PURE__ */ new Map([\n    [\n        \"proxy\",\n        proxyTransferHandler\n    ],\n    [\n        \"throw\",\n        throwTransferHandler\n    ]\n]);\nfunction expose(obj, ep = self) {\n    ep.addEventListener(\"message\", function callback(ev) {\n        if (!ev || !ev.data) {\n            return;\n        }\n        const { id, type, path } = Object.assign({\n            path: []\n        }, ev.data);\n        const argumentList = (ev.data.argumentList || []).map(fromWireValue);\n        let returnValue;\n        try {\n            const parent = path.slice(0, -1).reduce((obj2, prop)=>obj2[prop], obj);\n            const rawValue = path.reduce((obj2, prop)=>obj2[prop], obj);\n            switch(type){\n                case 0:\n                    {\n                        returnValue = rawValue;\n                    }\n                    break;\n                case 1:\n                    {\n                        parent[path.slice(-1)[0]] = fromWireValue(ev.data.value);\n                        returnValue = true;\n                    }\n                    break;\n                case 2:\n                    {\n                        returnValue = rawValue.apply(parent, argumentList);\n                    }\n                    break;\n                case 3:\n                    {\n                        const value = new rawValue(...argumentList);\n                        returnValue = proxy(value);\n                    }\n                    break;\n                case 4:\n                    {\n                        const { port1, port2 } = new MessageChannel();\n                        expose(obj, port2);\n                        returnValue = transfer(port1, [\n                            port1\n                        ]);\n                    }\n                    break;\n                case 5:\n                    {\n                        returnValue = void 0;\n                    }\n                    break;\n            }\n        } catch (value) {\n            returnValue = {\n                value,\n                [throwMarker]: 0\n            };\n        }\n        Promise.resolve(returnValue).catch((value)=>{\n            return {\n                value,\n                [throwMarker]: 0\n            };\n        }).then((returnValue2)=>{\n            const [wireValue, transferables] = toWireValue(returnValue2);\n            ep.postMessage(Object.assign(Object.assign({}, wireValue), {\n                id\n            }), transferables);\n            if (type === 5) {\n                ep.removeEventListener(\"message\", callback);\n                closeEndPoint(ep);\n            }\n        });\n    });\n    if (ep.start) {\n        ep.start();\n    }\n}\nfunction isMessagePort(endpoint) {\n    return endpoint.constructor.name === \"MessagePort\";\n}\nfunction closeEndPoint(endpoint) {\n    if (isMessagePort(endpoint)) endpoint.close();\n}\nfunction wrap(ep, target) {\n    return createProxy(ep, [], target);\n}\nfunction throwIfProxyReleased(isReleased) {\n    if (isReleased) {\n        throw new Error(\"Proxy has been released and is not useable\");\n    }\n}\nfunction createProxy(ep, path = [], target = function() {}) {\n    let isProxyReleased = false;\n    const proxy2 = new Proxy(target, {\n        get (_target, prop) {\n            throwIfProxyReleased(isProxyReleased);\n            if (prop === releaseProxy) {\n                return ()=>{\n                    return requestResponseMessage(ep, {\n                        type: 5,\n                        path: path.map((p)=>p.toString())\n                    }).then(()=>{\n                        closeEndPoint(ep);\n                        isProxyReleased = true;\n                    });\n                };\n            }\n            if (prop === \"then\") {\n                if (path.length === 0) {\n                    return {\n                        then: ()=>proxy2\n                    };\n                }\n                const r = requestResponseMessage(ep, {\n                    type: 0,\n                    path: path.map((p)=>p.toString())\n                }).then(fromWireValue);\n                return r.then.bind(r);\n            }\n            return createProxy(ep, [\n                ...path,\n                prop\n            ]);\n        },\n        set (_target, prop, rawValue) {\n            throwIfProxyReleased(isProxyReleased);\n            const [value, transferables] = toWireValue(rawValue);\n            return requestResponseMessage(ep, {\n                type: 1,\n                path: [\n                    ...path,\n                    prop\n                ].map((p)=>p.toString()),\n                value\n            }, transferables).then(fromWireValue);\n        },\n        apply (_target, _thisArg, rawArgumentList) {\n            throwIfProxyReleased(isProxyReleased);\n            const last = path[path.length - 1];\n            if (last === createEndpoint) {\n                return requestResponseMessage(ep, {\n                    type: 4\n                }).then(fromWireValue);\n            }\n            if (last === \"bind\") {\n                return createProxy(ep, path.slice(0, -1));\n            }\n            const [argumentList, transferables] = processArguments(rawArgumentList);\n            return requestResponseMessage(ep, {\n                type: 2,\n                path: path.map((p)=>p.toString()),\n                argumentList\n            }, transferables).then(fromWireValue);\n        },\n        construct (_target, rawArgumentList) {\n            throwIfProxyReleased(isProxyReleased);\n            const [argumentList, transferables] = processArguments(rawArgumentList);\n            return requestResponseMessage(ep, {\n                type: 3,\n                path: path.map((p)=>p.toString()),\n                argumentList\n            }, transferables).then(fromWireValue);\n        }\n    });\n    return proxy2;\n}\nfunction myFlat(arr) {\n    return Array.prototype.concat.apply([], arr);\n}\nfunction processArguments(argumentList) {\n    const processed = argumentList.map(toWireValue);\n    return [\n        processed.map((v)=>v[0]),\n        myFlat(processed.map((v)=>v[1]))\n    ];\n}\nvar transferCache = /* @__PURE__ */ new WeakMap();\nfunction transfer(obj, transfers) {\n    transferCache.set(obj, transfers);\n    return obj;\n}\nfunction proxy(obj) {\n    return Object.assign(obj, {\n        [proxyMarker]: true\n    });\n}\nfunction windowEndpoint(w, context = self, targetOrigin = \"*\") {\n    return {\n        postMessage: (msg, transferables)=>w.postMessage(msg, targetOrigin, transferables),\n        addEventListener: context.addEventListener.bind(context),\n        removeEventListener: context.removeEventListener.bind(context)\n    };\n}\nfunction toWireValue(value) {\n    for (const [name, handler] of transferHandlers){\n        if (handler.canHandle(value)) {\n            const [serializedValue, transferables] = handler.serialize(value);\n            return [\n                {\n                    type: 3,\n                    name,\n                    value: serializedValue\n                },\n                transferables\n            ];\n        }\n    }\n    return [\n        {\n            type: 0,\n            value\n        },\n        transferCache.get(value) || []\n    ];\n}\nfunction fromWireValue(value) {\n    switch(value.type){\n        case 3:\n            return transferHandlers.get(value.name).deserialize(value.value);\n        case 0:\n            return value.value;\n    }\n}\nfunction requestResponseMessage(ep, msg, transfers) {\n    return new Promise((resolve)=>{\n        const id = generateUUID();\n        ep.addEventListener(\"message\", function l(ev) {\n            if (!ev.data || !ev.data.id || ev.data.id !== id) {\n                return;\n            }\n            ep.removeEventListener(\"message\", l);\n            resolve(ev.data);\n        });\n        if (ep.start) {\n            ep.start();\n        }\n        ep.postMessage(Object.assign({\n            id\n        }, msg), transfers);\n    });\n}\nfunction generateUUID() {\n    return new Array(4).fill(0).map(()=>Math.floor(Math.random() * Number.MAX_SAFE_INTEGER).toString(16)).join(\"-\");\n}\n\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/@webcontainer/api/dist/vendor/index.js\n");

/***/ })

};
;